//*******************************************************************************************
// Description:    Netlist for RDCv3's MBus Register File
//     Generated by genRF (Version 1.2) 07/20/2018 17:21:52
//*******************************************************************************************

//*******************************************************************************************
// MEMORY MAP
//*******************************************************************************************
// MBUS ADDR     || Register Name                         || Reset Value || Type || Comments 
//*******************************************************************************************
// 8'h00         || REGISTER 0x00 (  0)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h00 [    6] || WAKEUP_UPON_RDC_IRQ                   ||  1'h0       ||  W/R || 
// 8'h00 [    5] || MBC_WAKEUP_ON_PEND_REQ                ||  1'h0       ||  W/R || 
// 8'h00 [    4] || MBC_IGNORE_RX_FAIL                    ||  1'h1       ||  W/R || 
// 8'h00 [ 3: 2] || LC_CLK_DIV                            ||  2'h2       ||  W/R || 
// 8'h00 [ 1: 0] || LC_CLK_RING                           ||  2'h1       ||  W/R || 
//*******************************************************************************************
// 8'h01         || REGISTER 0x01 (  1)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h01 [15: 8] || IRQ_RPLY_SHORT_ADDR                   ||  8'h10      ||  W/R || 
// 8'h01 [ 7: 0] || IRQ_RPLY_REG_ADDR                     ||  8'h07      ||  W/R || 
//*******************************************************************************************
// 8'h02         || REGISTER 0x02 (  2)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h02 [15: 8] || IRQ_RPLY_PYLD_REG_ADDR                ||  8'h11      ||  W/R || 
// 8'h02 [ 7: 0] || IRQ_RPLY_PYLD_LENGTH_1                ||  8'h00      ||  W/R || 
//*******************************************************************************************
// 8'h03         || REGISTER 0x03 (  3)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h04         || REGISTER 0x04 (  4)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h05         || REGISTER 0x05 (  5)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h06         || REGISTER 0x06 (  6)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h07         || REGISTER 0x07 (  7)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h08         || REGISTER 0x08 (  8)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h09         || REGISTER 0x09 (  9)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h0A         || REGISTER 0x0A ( 10)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h0B         || REGISTER 0x0B ( 11)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h0C         || REGISTER 0x0C ( 12)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h0D         || REGISTER 0x0D ( 13)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h0E         || REGISTER 0x0E ( 14)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h0F         || REGISTER 0x0F ( 15)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h10         || REGISTER 0x10 ( 16)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h10 [23: 0] || RDC_SIGNATURE                         || 24'h022003  ||  W/R || 
//*******************************************************************************************
// 8'h11         || REGISTER 0x11 ( 17)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h11 [16: 0] || RDC_DOUT_OS                           || 17'h00000   ||   R  || 
//*******************************************************************************************
// 8'h12         || REGISTER 0x12 ( 18)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h13         || REGISTER 0x13 ( 19)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h14         || REGISTER 0x14 ( 20)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h15         || REGISTER 0x15 ( 21)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h16         || REGISTER 0x16 ( 22)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h17         || REGISTER 0x17 ( 23)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h18         || REGISTER 0x18 ( 24)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h19         || REGISTER 0x19 ( 25)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h1A         || REGISTER 0x1A ( 26)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h1B         || REGISTER 0x1B ( 27)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h1C         || REGISTER 0x1C ( 28)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h1D         || REGISTER 0x1D ( 29)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h1E         || REGISTER 0x1E ( 30)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h1F         || REGISTER 0x1F ( 31)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h20         || REGISTER 0x20 ( 32)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h20 [   17] || RDC_ISOLATE                           ||  1'h1       ||  W/R || Isolate output from RDC
// 8'h20 [   15] || RDC_RESETn_FSM                        ||  1'h0       ||  W/R || 
// 8'h20 [14: 6] || RDC_CNT_INIT                          ||  9'h050     ||  W/R || 
// 8'h20 [ 5: 1] || RDC_CNT_AMP1                          ||  5'h0C      ||  W/R || 
// 8'h20 [    0] || RDC_EN_AZ                             ||  1'h1       ||  W/R || 
//*******************************************************************************************
// 8'h21         || REGISTER 0x21 ( 33)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h21 [18:15] || RDC_CNT_AZ_RESETB                     ||  4'h2       ||  W/R || 
// 8'h21 [14:10] || RDC_CNT_STORE                         ||  5'h04      ||  W/R || 
// 8'h21 [ 9: 5] || RDC_CNT_REDIS                         ||  5'h08      ||  W/R || 
// 8'h21 [ 4: 0] || RDC_CNT_AMP2                          ||  5'h06      ||  W/R || 
//*******************************************************************************************
// 8'h22         || REGISTER 0x22 ( 34)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h22 [12: 9] || RDC_CNT_IDLE                          ||  4'h2       ||  W/R || 
// 8'h22 [ 8: 7] || RDC_CNT_SKIP                          ||  2'h1       ||  W/R || 
// 8'h22 [ 6: 0] || RDC_OSR                               ||  7'h08      ||  W/R || 
//*******************************************************************************************
// 8'h23         || REGISTER 0x23 ( 35)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h23 [12: 8] || RDC_VREF_I_AMP_LC                     ||  5'h00      ||  W/R || 
// 8'h23 [ 7: 2] || RDC_VCM_R_SEL_LC                      ||  6'h2D      ||  W/R || 
// 8'h23 [ 1: 0] || RDC_I_VCM_GEN_n_LC                    ||  2'h2       ||  W/R || 
//*******************************************************************************************
// 8'h24         || REGISTER 0x24 ( 36)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h24 [17:14] || RDC_SEL_DLY                           ||  4'h5       ||  W/R || 
// 8'h24 [   13] || RDC_SEL_STORE                         ||  1'h1       ||  W/R || 
// 8'h24 [12: 8] || RDC_SEL_VB2_LC                        ||  5'h04      ||  W/R || 
// 8'h24 [ 7: 5] || RDC_SEL_VB3b_LC                       ||  3'h3       ||  W/R || 
// 8'h24 [ 4: 0] || RDC_SEL_GAIN_LC                       ||  5'h16      ||  W/R || 
//*******************************************************************************************
// 8'h25         || REGISTER 0x25 ( 37)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h25 [12: 8] || RDC_OFFSET_P_LC                       ||  5'h16      ||  W/R || 
// 8'h25 [ 7: 3] || RDC_OFFSET_PB_LC                      ||  5'h09      ||  W/R || 
// 8'h25 [ 2: 0] || RDC_I_AMP_BIASGEN                     ||  3'h3       ||  W/R || 
//*******************************************************************************************
// 8'h26         || REGISTER 0x26 ( 38)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h26 [ 7: 5] || RDC_OFFSET_SELN_B_LC                  ||  3'h7       ||  W/R || 
// 8'h26 [ 4: 2] || RDC_OFFSET_SELP_B_LC                  ||  3'h7       ||  W/R || 
// 8'h26 [    1] || RDC_SEL_ADC_MODE                      ||  1'h0       ||  W/R || 
// 8'h26 [    0] || RDC_ENb_DWA                           ||  1'h0       ||  W/R || 
//*******************************************************************************************
// 8'h27         || REGISTER 0x27 ( 39)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h27 [ 2: 0] || RDC_I_BUF_VH_n_LC                     ||  3'h5       ||  W/R || 
//*******************************************************************************************
// 8'h28         || REGISTER 0x28 ( 40)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h28 [   18] || RDC_RESET_RC_OSC                      ||  1'h1       ||  W/R || 
// 8'h28 [17:14] || RDC_R_REF                             ||  4'h8       ||  W/R || 
// 8'h28 [13:10] || RDC_I_BUF                             ||  4'h0       ||  W/R || 
// 8'h28 [ 9: 6] || RDC_I_BUF2                            ||  4'h0       ||  W/R || 
// 8'h28 [ 5: 2] || RDC_I_CMP                             ||  4'h1       ||  W/R || 
// 8'h28 [ 1: 0] || RDC_I_MIRROR                          ||  2'h1       ||  W/R || 
//*******************************************************************************************
// 8'h29         || REGISTER 0x29 ( 41)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h29 [14: 0] || RDC_PDIFF                             || 15'h0200    ||  W/R || 
//*******************************************************************************************
// 8'h2A         || REGISTER 0x2A ( 42)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h2A [23: 0] || RDC_POLY                              || 24'h004000  ||  W/R || 
//*******************************************************************************************
// 8'h2B         || REGISTER 0x2B ( 43)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h2B [ 6: 4] || RDC_MIM                               ||  3'h4       ||  W/R || 
// 8'h2B [ 3: 1] || RDC_MOM                               ||  3'h4       ||  W/R || 
// 8'h2B [    0] || RDC_CLK_ISOLATE                       ||  1'h1       ||  W/R || 
//*******************************************************************************************
// 8'h2C         || REGISTER 0x2C ( 44)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h2C [   10] || RDC_EN_PG_FSM                         ||  1'h1       ||  W/R || 
// 8'h2C [    9] || RDC_EN_PG_AMP_V1P2                    ||  1'h1       ||  W/R || 
// 8'h2C [    8] || RDC_EN_PG_ADC_V1P2                    ||  1'h1       ||  W/R || 
// 8'h2C [    7] || RDC_EN_PG_BUF_VH_V1P2                 ||  1'h1       ||  W/R || 
// 8'h2C [    6] || RDC_EN_PG_RC_OSC                      ||  1'h1       ||  W/R || 
// 8'h2C [    5] || RDC_ENb_PG_VREF                       ||  1'h0       ||  W/R || 
// 8'h2C [    4] || RDC_ENb_PG_AMP_VBAT                   ||  1'h0       ||  W/R || 
// 8'h2C [    3] || RDC_ENb_PG_ADC_VBAT                   ||  1'h0       ||  W/R || 
// 8'h2C [    2] || RDC_ENb_MIRROR_LDO                    ||  1'h1       ||  W/R || 
// 8'h2C [    1] || RDC_ENb_PG_BUF_VCM                    ||  1'h0       ||  W/R || 
// 8'h2C [    0] || RDC_ENb_PG_BUF_VH_VBAT                ||  1'h0       ||  W/R || 
//*******************************************************************************************

module rdcv3_rf (
   //Input
    input         RESETn,
    input         ISOLATE,
    input [ 44:0] ADDR_IN,
    input [ 23:0] DATA_IN,
   //Output
    //Register 0x00 (  0)
    output        WAKEUP_UPON_RDC_IRQ,
    output        MBC_WAKEUP_ON_PEND_REQ,
    output        MBC_IGNORE_RX_FAIL,
    output [ 1:0] LC_CLK_DIV,
    output [ 1:0] LC_CLK_RING,
    //Register 0x01 (  1)
    output [ 7:0] IRQ_RPLY_SHORT_ADDR,
    output [ 7:0] IRQ_RPLY_REG_ADDR,
    //Register 0x02 (  2)
    output [ 7:0] IRQ_RPLY_PYLD_REG_ADDR,
    output [ 7:0] IRQ_RPLY_PYLD_LENGTH_1,
    //Register 0x10 ( 16)
    output [23:0] RDC_SIGNATURE,
    //Register 0x11 ( 17)
    //output [16:0] RDC_DOUT_OS, // READ-ONLY
    //Register 0x20 ( 32)
    output        RDC_ISOLATE,
    output        RDC_ISOLATE_B, // Inverted Signal of RDC_ISOLATE
    output        RDC_RESETn_FSM,
    output [ 8:0] RDC_CNT_INIT,
    output [ 4:0] RDC_CNT_AMP1,
    output        RDC_EN_AZ,
    //Register 0x21 ( 33)
    output [ 3:0] RDC_CNT_AZ_RESETB,
    output [ 4:0] RDC_CNT_STORE,
    output [ 4:0] RDC_CNT_REDIS,
    output [ 4:0] RDC_CNT_AMP2,
    //Register 0x22 ( 34)
    output [ 3:0] RDC_CNT_IDLE,
    output [ 1:0] RDC_CNT_SKIP,
    output [ 6:0] RDC_OSR,
    //Register 0x23 ( 35)
    output [ 4:0] RDC_VREF_I_AMP_LC,
    output [ 4:0] RDC_VREF_I_AMP_LC_B, // Inverted Signal of RDC_VREF_I_AMP_LC
    output [ 5:0] RDC_VCM_R_SEL_LC,
    output [ 5:0] RDC_VCM_R_SEL_LC_B, // Inverted Signal of RDC_VCM_R_SEL_LC
    output [ 1:0] RDC_I_VCM_GEN_n_LC,
    output [ 1:0] RDC_I_VCM_GEN_n_LC_B, // Inverted Signal of RDC_I_VCM_GEN_n_LC
    //Register 0x24 ( 36)
    output [ 3:0] RDC_SEL_DLY,
    output        RDC_SEL_STORE,
    output [ 4:0] RDC_SEL_VB2_LC,
    output [ 4:0] RDC_SEL_VB2_LC_B, // Inverted Signal of RDC_SEL_VB2_LC
    output [ 2:0] RDC_SEL_VB3b_LC,
    output [ 2:0] RDC_SEL_VB3b_LC_B, // Inverted Signal of RDC_SEL_VB3b_LC
    output [ 4:0] RDC_SEL_GAIN_LC,
    output [ 4:0] RDC_SEL_GAIN_LC_B, // Inverted Signal of RDC_SEL_GAIN_LC
    //Register 0x25 ( 37)
    output [ 4:0] RDC_OFFSET_P_LC,
    output [ 4:0] RDC_OFFSET_P_LC_B, // Inverted Signal of RDC_OFFSET_P_LC
    output [ 4:0] RDC_OFFSET_PB_LC,
    output [ 4:0] RDC_OFFSET_PB_LC_B, // Inverted Signal of RDC_OFFSET_PB_LC
    output [ 2:0] RDC_I_AMP_BIASGEN,
    //Register 0x26 ( 38)
    output [ 2:0] RDC_OFFSET_SELN_B_LC,
    output [ 2:0] RDC_OFFSET_SELN_B_LC_B, // Inverted Signal of RDC_OFFSET_SELN_B_LC
    output [ 2:0] RDC_OFFSET_SELP_B_LC,
    output [ 2:0] RDC_OFFSET_SELP_B_LC_B, // Inverted Signal of RDC_OFFSET_SELP_B_LC
    output        RDC_SEL_ADC_MODE,
    output        RDC_ENb_DWA,
    //Register 0x27 ( 39)
    output [ 2:0] RDC_I_BUF_VH_n_LC,
    output [ 2:0] RDC_I_BUF_VH_n_LC_B, // Inverted Signal of RDC_I_BUF_VH_n_LC
    //Register 0x28 ( 40)
    output        RDC_RESET_RC_OSC,
    output [ 3:0] RDC_R_REF,
    output [ 3:0] RDC_I_BUF,
    output [ 3:0] RDC_I_BUF2,
    output [ 3:0] RDC_I_CMP,
    output [ 1:0] RDC_I_MIRROR,
    //Register 0x29 ( 41)
    output [14:0] RDC_PDIFF,
    //Register 0x2A ( 42)
    output [23:0] RDC_POLY,
    //Register 0x2B ( 43)
    output [ 2:0] RDC_MIM,
    output [ 2:0] RDC_MOM,
    output        RDC_CLK_ISOLATE,
    //Register 0x2C ( 44)
    output        RDC_EN_PG_FSM,
    output        RDC_EN_PG_AMP_V1P2,
    output        RDC_EN_PG_ADC_V1P2,
    output        RDC_EN_PG_BUF_VH_V1P2,
    output        RDC_EN_PG_RC_OSC,
    output        RDC_ENb_PG_VREF,
    output        RDC_ENb_PG_AMP_VBAT,
    output        RDC_ENb_PG_ADC_VBAT,
    output        RDC_ENb_MIRROR_LDO,
    output        RDC_ENb_PG_BUF_VCM,
    output        RDC_ENb_PG_BUF_VH_VBAT
   );

   //Internal Wires
    wire         isolate_n;
    wire [ 44:0] addr_in_iso;
    wire [ 44:0] addr_in_iso_buf;
    wire [ 23:0] data_in_iso;
    wire [ 23:0] data_in_iso_buf;

   //****************************************************
   // ISOLATE                                            
   //****************************************************
    INVX4HVT ISOLATE_INV_0 (.A(ISOLATE), .Y(isolate_n));

    AND2X1HVT ADDR_IN_AND_044 (.A(isolate_n), .B(ADDR_IN[ 44]), .Y(addr_in_iso[ 44]));
    AND2X1HVT ADDR_IN_AND_043 (.A(isolate_n), .B(ADDR_IN[ 43]), .Y(addr_in_iso[ 43]));
    AND2X1HVT ADDR_IN_AND_042 (.A(isolate_n), .B(ADDR_IN[ 42]), .Y(addr_in_iso[ 42]));
    AND2X1HVT ADDR_IN_AND_041 (.A(isolate_n), .B(ADDR_IN[ 41]), .Y(addr_in_iso[ 41]));
    AND2X1HVT ADDR_IN_AND_040 (.A(isolate_n), .B(ADDR_IN[ 40]), .Y(addr_in_iso[ 40]));
    AND2X1HVT ADDR_IN_AND_039 (.A(isolate_n), .B(ADDR_IN[ 39]), .Y(addr_in_iso[ 39]));
    AND2X1HVT ADDR_IN_AND_038 (.A(isolate_n), .B(ADDR_IN[ 38]), .Y(addr_in_iso[ 38]));
    AND2X1HVT ADDR_IN_AND_037 (.A(isolate_n), .B(ADDR_IN[ 37]), .Y(addr_in_iso[ 37]));
    AND2X1HVT ADDR_IN_AND_036 (.A(isolate_n), .B(ADDR_IN[ 36]), .Y(addr_in_iso[ 36]));
    AND2X1HVT ADDR_IN_AND_035 (.A(isolate_n), .B(ADDR_IN[ 35]), .Y(addr_in_iso[ 35]));
    AND2X1HVT ADDR_IN_AND_034 (.A(isolate_n), .B(ADDR_IN[ 34]), .Y(addr_in_iso[ 34]));
    AND2X1HVT ADDR_IN_AND_033 (.A(isolate_n), .B(ADDR_IN[ 33]), .Y(addr_in_iso[ 33]));
    AND2X1HVT ADDR_IN_AND_032 (.A(isolate_n), .B(ADDR_IN[ 32]), .Y(addr_in_iso[ 32]));
    //AND2X1HVT ADDR_IN_AND_031 (.A(isolate_n), .B(ADDR_IN[ 31]), .Y(addr_in_iso[ 31]));
    //AND2X1HVT ADDR_IN_AND_030 (.A(isolate_n), .B(ADDR_IN[ 30]), .Y(addr_in_iso[ 30]));
    //AND2X1HVT ADDR_IN_AND_029 (.A(isolate_n), .B(ADDR_IN[ 29]), .Y(addr_in_iso[ 29]));
    //AND2X1HVT ADDR_IN_AND_028 (.A(isolate_n), .B(ADDR_IN[ 28]), .Y(addr_in_iso[ 28]));
    //AND2X1HVT ADDR_IN_AND_027 (.A(isolate_n), .B(ADDR_IN[ 27]), .Y(addr_in_iso[ 27]));
    //AND2X1HVT ADDR_IN_AND_026 (.A(isolate_n), .B(ADDR_IN[ 26]), .Y(addr_in_iso[ 26]));
    //AND2X1HVT ADDR_IN_AND_025 (.A(isolate_n), .B(ADDR_IN[ 25]), .Y(addr_in_iso[ 25]));
    //AND2X1HVT ADDR_IN_AND_024 (.A(isolate_n), .B(ADDR_IN[ 24]), .Y(addr_in_iso[ 24]));
    //AND2X1HVT ADDR_IN_AND_023 (.A(isolate_n), .B(ADDR_IN[ 23]), .Y(addr_in_iso[ 23]));
    //AND2X1HVT ADDR_IN_AND_022 (.A(isolate_n), .B(ADDR_IN[ 22]), .Y(addr_in_iso[ 22]));
    //AND2X1HVT ADDR_IN_AND_021 (.A(isolate_n), .B(ADDR_IN[ 21]), .Y(addr_in_iso[ 21]));
    //AND2X1HVT ADDR_IN_AND_020 (.A(isolate_n), .B(ADDR_IN[ 20]), .Y(addr_in_iso[ 20]));
    //AND2X1HVT ADDR_IN_AND_019 (.A(isolate_n), .B(ADDR_IN[ 19]), .Y(addr_in_iso[ 19]));
    //AND2X1HVT ADDR_IN_AND_018 (.A(isolate_n), .B(ADDR_IN[ 18]), .Y(addr_in_iso[ 18]));
    //AND2X1HVT ADDR_IN_AND_017 (.A(isolate_n), .B(ADDR_IN[ 17]), .Y(addr_in_iso[ 17]));
    AND2X1HVT ADDR_IN_AND_016 (.A(isolate_n), .B(ADDR_IN[ 16]), .Y(addr_in_iso[ 16]));
    //AND2X1HVT ADDR_IN_AND_015 (.A(isolate_n), .B(ADDR_IN[ 15]), .Y(addr_in_iso[ 15]));
    //AND2X1HVT ADDR_IN_AND_014 (.A(isolate_n), .B(ADDR_IN[ 14]), .Y(addr_in_iso[ 14]));
    //AND2X1HVT ADDR_IN_AND_013 (.A(isolate_n), .B(ADDR_IN[ 13]), .Y(addr_in_iso[ 13]));
    //AND2X1HVT ADDR_IN_AND_012 (.A(isolate_n), .B(ADDR_IN[ 12]), .Y(addr_in_iso[ 12]));
    //AND2X1HVT ADDR_IN_AND_011 (.A(isolate_n), .B(ADDR_IN[ 11]), .Y(addr_in_iso[ 11]));
    //AND2X1HVT ADDR_IN_AND_010 (.A(isolate_n), .B(ADDR_IN[ 10]), .Y(addr_in_iso[ 10]));
    //AND2X1HVT ADDR_IN_AND_009 (.A(isolate_n), .B(ADDR_IN[  9]), .Y(addr_in_iso[  9]));
    //AND2X1HVT ADDR_IN_AND_008 (.A(isolate_n), .B(ADDR_IN[  8]), .Y(addr_in_iso[  8]));
    //AND2X1HVT ADDR_IN_AND_007 (.A(isolate_n), .B(ADDR_IN[  7]), .Y(addr_in_iso[  7]));
    //AND2X1HVT ADDR_IN_AND_006 (.A(isolate_n), .B(ADDR_IN[  6]), .Y(addr_in_iso[  6]));
    //AND2X1HVT ADDR_IN_AND_005 (.A(isolate_n), .B(ADDR_IN[  5]), .Y(addr_in_iso[  5]));
    //AND2X1HVT ADDR_IN_AND_004 (.A(isolate_n), .B(ADDR_IN[  4]), .Y(addr_in_iso[  4]));
    //AND2X1HVT ADDR_IN_AND_003 (.A(isolate_n), .B(ADDR_IN[  3]), .Y(addr_in_iso[  3]));
    AND2X1HVT ADDR_IN_AND_002 (.A(isolate_n), .B(ADDR_IN[  2]), .Y(addr_in_iso[  2]));
    AND2X1HVT ADDR_IN_AND_001 (.A(isolate_n), .B(ADDR_IN[  1]), .Y(addr_in_iso[  1]));
    AND2X1HVT ADDR_IN_AND_000 (.A(isolate_n), .B(ADDR_IN[  0]), .Y(addr_in_iso[  0]));

    AND2X1HVT DATA_IN_AND_23 (.A(isolate_n), .B(DATA_IN[23]), .Y(data_in_iso[23]));
    AND2X1HVT DATA_IN_AND_22 (.A(isolate_n), .B(DATA_IN[22]), .Y(data_in_iso[22]));
    AND2X1HVT DATA_IN_AND_21 (.A(isolate_n), .B(DATA_IN[21]), .Y(data_in_iso[21]));
    AND2X1HVT DATA_IN_AND_20 (.A(isolate_n), .B(DATA_IN[20]), .Y(data_in_iso[20]));
    AND2X1HVT DATA_IN_AND_19 (.A(isolate_n), .B(DATA_IN[19]), .Y(data_in_iso[19]));
    AND2X1HVT DATA_IN_AND_18 (.A(isolate_n), .B(DATA_IN[18]), .Y(data_in_iso[18]));
    AND2X1HVT DATA_IN_AND_17 (.A(isolate_n), .B(DATA_IN[17]), .Y(data_in_iso[17]));
    AND2X1HVT DATA_IN_AND_16 (.A(isolate_n), .B(DATA_IN[16]), .Y(data_in_iso[16]));
    AND2X1HVT DATA_IN_AND_15 (.A(isolate_n), .B(DATA_IN[15]), .Y(data_in_iso[15]));
    AND2X1HVT DATA_IN_AND_14 (.A(isolate_n), .B(DATA_IN[14]), .Y(data_in_iso[14]));
    AND2X1HVT DATA_IN_AND_13 (.A(isolate_n), .B(DATA_IN[13]), .Y(data_in_iso[13]));
    AND2X1HVT DATA_IN_AND_12 (.A(isolate_n), .B(DATA_IN[12]), .Y(data_in_iso[12]));
    AND2X1HVT DATA_IN_AND_11 (.A(isolate_n), .B(DATA_IN[11]), .Y(data_in_iso[11]));
    AND2X1HVT DATA_IN_AND_10 (.A(isolate_n), .B(DATA_IN[10]), .Y(data_in_iso[10]));
    AND2X1HVT DATA_IN_AND_09 (.A(isolate_n), .B(DATA_IN[ 9]), .Y(data_in_iso[ 9]));
    AND2X1HVT DATA_IN_AND_08 (.A(isolate_n), .B(DATA_IN[ 8]), .Y(data_in_iso[ 8]));
    AND2X1HVT DATA_IN_AND_07 (.A(isolate_n), .B(DATA_IN[ 7]), .Y(data_in_iso[ 7]));
    AND2X1HVT DATA_IN_AND_06 (.A(isolate_n), .B(DATA_IN[ 6]), .Y(data_in_iso[ 6]));
    AND2X1HVT DATA_IN_AND_05 (.A(isolate_n), .B(DATA_IN[ 5]), .Y(data_in_iso[ 5]));
    AND2X1HVT DATA_IN_AND_04 (.A(isolate_n), .B(DATA_IN[ 4]), .Y(data_in_iso[ 4]));
    AND2X1HVT DATA_IN_AND_03 (.A(isolate_n), .B(DATA_IN[ 3]), .Y(data_in_iso[ 3]));
    AND2X1HVT DATA_IN_AND_02 (.A(isolate_n), .B(DATA_IN[ 2]), .Y(data_in_iso[ 2]));
    AND2X1HVT DATA_IN_AND_01 (.A(isolate_n), .B(DATA_IN[ 1]), .Y(data_in_iso[ 1]));
    AND2X1HVT DATA_IN_AND_00 (.A(isolate_n), .B(DATA_IN[ 0]), .Y(data_in_iso[ 0]));

    BUFX4HVT BUF_ADDR_IN_044 (.A(addr_in_iso[ 44]), .Y(addr_in_iso_buf[ 44]));
    BUFX4HVT BUF_ADDR_IN_043 (.A(addr_in_iso[ 43]), .Y(addr_in_iso_buf[ 43]));
    BUFX4HVT BUF_ADDR_IN_042 (.A(addr_in_iso[ 42]), .Y(addr_in_iso_buf[ 42]));
    BUFX4HVT BUF_ADDR_IN_041 (.A(addr_in_iso[ 41]), .Y(addr_in_iso_buf[ 41]));
    BUFX4HVT BUF_ADDR_IN_040 (.A(addr_in_iso[ 40]), .Y(addr_in_iso_buf[ 40]));
    BUFX4HVT BUF_ADDR_IN_039 (.A(addr_in_iso[ 39]), .Y(addr_in_iso_buf[ 39]));
    BUFX4HVT BUF_ADDR_IN_038 (.A(addr_in_iso[ 38]), .Y(addr_in_iso_buf[ 38]));
    BUFX4HVT BUF_ADDR_IN_037 (.A(addr_in_iso[ 37]), .Y(addr_in_iso_buf[ 37]));
    BUFX4HVT BUF_ADDR_IN_036 (.A(addr_in_iso[ 36]), .Y(addr_in_iso_buf[ 36]));
    BUFX4HVT BUF_ADDR_IN_035 (.A(addr_in_iso[ 35]), .Y(addr_in_iso_buf[ 35]));
    BUFX4HVT BUF_ADDR_IN_034 (.A(addr_in_iso[ 34]), .Y(addr_in_iso_buf[ 34]));
    BUFX4HVT BUF_ADDR_IN_033 (.A(addr_in_iso[ 33]), .Y(addr_in_iso_buf[ 33]));
    BUFX4HVT BUF_ADDR_IN_032 (.A(addr_in_iso[ 32]), .Y(addr_in_iso_buf[ 32]));
    //BUFX4HVT BUF_ADDR_IN_031 (.A(addr_in_iso[ 31]), .Y(addr_in_iso_buf[ 31]));
    //BUFX4HVT BUF_ADDR_IN_030 (.A(addr_in_iso[ 30]), .Y(addr_in_iso_buf[ 30]));
    //BUFX4HVT BUF_ADDR_IN_029 (.A(addr_in_iso[ 29]), .Y(addr_in_iso_buf[ 29]));
    //BUFX4HVT BUF_ADDR_IN_028 (.A(addr_in_iso[ 28]), .Y(addr_in_iso_buf[ 28]));
    //BUFX4HVT BUF_ADDR_IN_027 (.A(addr_in_iso[ 27]), .Y(addr_in_iso_buf[ 27]));
    //BUFX4HVT BUF_ADDR_IN_026 (.A(addr_in_iso[ 26]), .Y(addr_in_iso_buf[ 26]));
    //BUFX4HVT BUF_ADDR_IN_025 (.A(addr_in_iso[ 25]), .Y(addr_in_iso_buf[ 25]));
    //BUFX4HVT BUF_ADDR_IN_024 (.A(addr_in_iso[ 24]), .Y(addr_in_iso_buf[ 24]));
    //BUFX4HVT BUF_ADDR_IN_023 (.A(addr_in_iso[ 23]), .Y(addr_in_iso_buf[ 23]));
    //BUFX4HVT BUF_ADDR_IN_022 (.A(addr_in_iso[ 22]), .Y(addr_in_iso_buf[ 22]));
    //BUFX4HVT BUF_ADDR_IN_021 (.A(addr_in_iso[ 21]), .Y(addr_in_iso_buf[ 21]));
    //BUFX4HVT BUF_ADDR_IN_020 (.A(addr_in_iso[ 20]), .Y(addr_in_iso_buf[ 20]));
    //BUFX4HVT BUF_ADDR_IN_019 (.A(addr_in_iso[ 19]), .Y(addr_in_iso_buf[ 19]));
    //BUFX4HVT BUF_ADDR_IN_018 (.A(addr_in_iso[ 18]), .Y(addr_in_iso_buf[ 18]));
    //BUFX4HVT BUF_ADDR_IN_017 (.A(addr_in_iso[ 17]), .Y(addr_in_iso_buf[ 17]));
    BUFX4HVT BUF_ADDR_IN_016 (.A(addr_in_iso[ 16]), .Y(addr_in_iso_buf[ 16]));
    //BUFX4HVT BUF_ADDR_IN_015 (.A(addr_in_iso[ 15]), .Y(addr_in_iso_buf[ 15]));
    //BUFX4HVT BUF_ADDR_IN_014 (.A(addr_in_iso[ 14]), .Y(addr_in_iso_buf[ 14]));
    //BUFX4HVT BUF_ADDR_IN_013 (.A(addr_in_iso[ 13]), .Y(addr_in_iso_buf[ 13]));
    //BUFX4HVT BUF_ADDR_IN_012 (.A(addr_in_iso[ 12]), .Y(addr_in_iso_buf[ 12]));
    //BUFX4HVT BUF_ADDR_IN_011 (.A(addr_in_iso[ 11]), .Y(addr_in_iso_buf[ 11]));
    //BUFX4HVT BUF_ADDR_IN_010 (.A(addr_in_iso[ 10]), .Y(addr_in_iso_buf[ 10]));
    //BUFX4HVT BUF_ADDR_IN_009 (.A(addr_in_iso[  9]), .Y(addr_in_iso_buf[  9]));
    //BUFX4HVT BUF_ADDR_IN_008 (.A(addr_in_iso[  8]), .Y(addr_in_iso_buf[  8]));
    //BUFX4HVT BUF_ADDR_IN_007 (.A(addr_in_iso[  7]), .Y(addr_in_iso_buf[  7]));
    //BUFX4HVT BUF_ADDR_IN_006 (.A(addr_in_iso[  6]), .Y(addr_in_iso_buf[  6]));
    //BUFX4HVT BUF_ADDR_IN_005 (.A(addr_in_iso[  5]), .Y(addr_in_iso_buf[  5]));
    //BUFX4HVT BUF_ADDR_IN_004 (.A(addr_in_iso[  4]), .Y(addr_in_iso_buf[  4]));
    //BUFX4HVT BUF_ADDR_IN_003 (.A(addr_in_iso[  3]), .Y(addr_in_iso_buf[  3]));
    BUFX4HVT BUF_ADDR_IN_002 (.A(addr_in_iso[  2]), .Y(addr_in_iso_buf[  2]));
    BUFX4HVT BUF_ADDR_IN_001 (.A(addr_in_iso[  1]), .Y(addr_in_iso_buf[  1]));
    BUFX4HVT BUF_ADDR_IN_000 (.A(addr_in_iso[  0]), .Y(addr_in_iso_buf[  0]));

    BUFX4HVT BUF_DATA_IN_23 (.A(data_in_iso[23]), .Y(data_in_iso_buf[23]));
    BUFX4HVT BUF_DATA_IN_22 (.A(data_in_iso[22]), .Y(data_in_iso_buf[22]));
    BUFX4HVT BUF_DATA_IN_21 (.A(data_in_iso[21]), .Y(data_in_iso_buf[21]));
    BUFX4HVT BUF_DATA_IN_20 (.A(data_in_iso[20]), .Y(data_in_iso_buf[20]));
    BUFX4HVT BUF_DATA_IN_19 (.A(data_in_iso[19]), .Y(data_in_iso_buf[19]));
    BUFX4HVT BUF_DATA_IN_18 (.A(data_in_iso[18]), .Y(data_in_iso_buf[18]));
    BUFX4HVT BUF_DATA_IN_17 (.A(data_in_iso[17]), .Y(data_in_iso_buf[17]));
    BUFX4HVT BUF_DATA_IN_16 (.A(data_in_iso[16]), .Y(data_in_iso_buf[16]));
    BUFX4HVT BUF_DATA_IN_15 (.A(data_in_iso[15]), .Y(data_in_iso_buf[15]));
    BUFX4HVT BUF_DATA_IN_14 (.A(data_in_iso[14]), .Y(data_in_iso_buf[14]));
    BUFX4HVT BUF_DATA_IN_13 (.A(data_in_iso[13]), .Y(data_in_iso_buf[13]));
    BUFX4HVT BUF_DATA_IN_12 (.A(data_in_iso[12]), .Y(data_in_iso_buf[12]));
    BUFX4HVT BUF_DATA_IN_11 (.A(data_in_iso[11]), .Y(data_in_iso_buf[11]));
    BUFX4HVT BUF_DATA_IN_10 (.A(data_in_iso[10]), .Y(data_in_iso_buf[10]));
    BUFX4HVT BUF_DATA_IN_09 (.A(data_in_iso[ 9]), .Y(data_in_iso_buf[ 9]));
    BUFX4HVT BUF_DATA_IN_08 (.A(data_in_iso[ 8]), .Y(data_in_iso_buf[ 8]));
    BUFX4HVT BUF_DATA_IN_07 (.A(data_in_iso[ 7]), .Y(data_in_iso_buf[ 7]));
    BUFX4HVT BUF_DATA_IN_06 (.A(data_in_iso[ 6]), .Y(data_in_iso_buf[ 6]));
    BUFX4HVT BUF_DATA_IN_05 (.A(data_in_iso[ 5]), .Y(data_in_iso_buf[ 5]));
    BUFX4HVT BUF_DATA_IN_04 (.A(data_in_iso[ 4]), .Y(data_in_iso_buf[ 4]));
    BUFX4HVT BUF_DATA_IN_03 (.A(data_in_iso[ 3]), .Y(data_in_iso_buf[ 3]));
    BUFX4HVT BUF_DATA_IN_02 (.A(data_in_iso[ 2]), .Y(data_in_iso_buf[ 2]));
    BUFX4HVT BUF_DATA_IN_01 (.A(data_in_iso[ 1]), .Y(data_in_iso_buf[ 1]));
    BUFX4HVT BUF_DATA_IN_00 (.A(data_in_iso[ 0]), .Y(data_in_iso_buf[ 0]));

   //****************************************************
   // REGISTER 0x00 (  0)
   //****************************************************
    //WAKEUP_UPON_RDC_IRQ (1'h0)
    DFFRX1HVT WAKEUP_UPON_RDC_IRQ_0 (.CK(addr_in_iso_buf[0]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(WAKEUP_UPON_RDC_IRQ));
    //MBC_WAKEUP_ON_PEND_REQ (1'h0)
    DFFRX1HVT MBC_WAKEUP_ON_PEND_REQ_0 (.CK(addr_in_iso_buf[0]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(MBC_WAKEUP_ON_PEND_REQ));
    //MBC_IGNORE_RX_FAIL (1'h1)
    DFFSX1HVT MBC_IGNORE_RX_FAIL_0 (.CK(addr_in_iso_buf[0]), .D(data_in_iso_buf[4]), .SN(RESETn), .Q(MBC_IGNORE_RX_FAIL));
    //LC_CLK_DIV (2'h2)
    DFFSX1HVT LC_CLK_DIV_1 (.CK(addr_in_iso_buf[0]), .D(data_in_iso_buf[3]), .SN(RESETn), .Q(LC_CLK_DIV[1]));
    DFFRX1HVT LC_CLK_DIV_0 (.CK(addr_in_iso_buf[0]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(LC_CLK_DIV[0]));
    //LC_CLK_RING (2'h1)
    DFFRX1HVT LC_CLK_RING_1 (.CK(addr_in_iso_buf[0]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(LC_CLK_RING[1]));
    DFFSX1HVT LC_CLK_RING_0 (.CK(addr_in_iso_buf[0]), .D(data_in_iso_buf[0]), .SN(RESETn), .Q(LC_CLK_RING[0]));

   //****************************************************
   // REGISTER 0x01 (  1)
   //****************************************************
    //IRQ_RPLY_SHORT_ADDR (8'h10)
    DFFRX1HVT IRQ_RPLY_SHORT_ADDR_7 (.CK(addr_in_iso_buf[1]), .D(data_in_iso_buf[15]), .RN(RESETn), .Q(IRQ_RPLY_SHORT_ADDR[7]));
    DFFRX1HVT IRQ_RPLY_SHORT_ADDR_6 (.CK(addr_in_iso_buf[1]), .D(data_in_iso_buf[14]), .RN(RESETn), .Q(IRQ_RPLY_SHORT_ADDR[6]));
    DFFRX1HVT IRQ_RPLY_SHORT_ADDR_5 (.CK(addr_in_iso_buf[1]), .D(data_in_iso_buf[13]), .RN(RESETn), .Q(IRQ_RPLY_SHORT_ADDR[5]));
    DFFSX1HVT IRQ_RPLY_SHORT_ADDR_4 (.CK(addr_in_iso_buf[1]), .D(data_in_iso_buf[12]), .SN(RESETn), .Q(IRQ_RPLY_SHORT_ADDR[4]));
    DFFRX1HVT IRQ_RPLY_SHORT_ADDR_3 (.CK(addr_in_iso_buf[1]), .D(data_in_iso_buf[11]), .RN(RESETn), .Q(IRQ_RPLY_SHORT_ADDR[3]));
    DFFRX1HVT IRQ_RPLY_SHORT_ADDR_2 (.CK(addr_in_iso_buf[1]), .D(data_in_iso_buf[10]), .RN(RESETn), .Q(IRQ_RPLY_SHORT_ADDR[2]));
    DFFRX1HVT IRQ_RPLY_SHORT_ADDR_1 (.CK(addr_in_iso_buf[1]), .D(data_in_iso_buf[9]), .RN(RESETn), .Q(IRQ_RPLY_SHORT_ADDR[1]));
    DFFRX1HVT IRQ_RPLY_SHORT_ADDR_0 (.CK(addr_in_iso_buf[1]), .D(data_in_iso_buf[8]), .RN(RESETn), .Q(IRQ_RPLY_SHORT_ADDR[0]));
    //IRQ_RPLY_REG_ADDR (8'h07)
    DFFRX1HVT IRQ_RPLY_REG_ADDR_7 (.CK(addr_in_iso_buf[1]), .D(data_in_iso_buf[7]), .RN(RESETn), .Q(IRQ_RPLY_REG_ADDR[7]));
    DFFRX1HVT IRQ_RPLY_REG_ADDR_6 (.CK(addr_in_iso_buf[1]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(IRQ_RPLY_REG_ADDR[6]));
    DFFRX1HVT IRQ_RPLY_REG_ADDR_5 (.CK(addr_in_iso_buf[1]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(IRQ_RPLY_REG_ADDR[5]));
    DFFRX1HVT IRQ_RPLY_REG_ADDR_4 (.CK(addr_in_iso_buf[1]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(IRQ_RPLY_REG_ADDR[4]));
    DFFRX1HVT IRQ_RPLY_REG_ADDR_3 (.CK(addr_in_iso_buf[1]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(IRQ_RPLY_REG_ADDR[3]));
    DFFSX1HVT IRQ_RPLY_REG_ADDR_2 (.CK(addr_in_iso_buf[1]), .D(data_in_iso_buf[2]), .SN(RESETn), .Q(IRQ_RPLY_REG_ADDR[2]));
    DFFSX1HVT IRQ_RPLY_REG_ADDR_1 (.CK(addr_in_iso_buf[1]), .D(data_in_iso_buf[1]), .SN(RESETn), .Q(IRQ_RPLY_REG_ADDR[1]));
    DFFSX1HVT IRQ_RPLY_REG_ADDR_0 (.CK(addr_in_iso_buf[1]), .D(data_in_iso_buf[0]), .SN(RESETn), .Q(IRQ_RPLY_REG_ADDR[0]));

   //****************************************************
   // REGISTER 0x02 (  2)
   //****************************************************
    //IRQ_RPLY_PYLD_REG_ADDR (8'h11)
    DFFRX1HVT IRQ_RPLY_PYLD_REG_ADDR_7 (.CK(addr_in_iso_buf[2]), .D(data_in_iso_buf[15]), .RN(RESETn), .Q(IRQ_RPLY_PYLD_REG_ADDR[7]));
    DFFRX1HVT IRQ_RPLY_PYLD_REG_ADDR_6 (.CK(addr_in_iso_buf[2]), .D(data_in_iso_buf[14]), .RN(RESETn), .Q(IRQ_RPLY_PYLD_REG_ADDR[6]));
    DFFRX1HVT IRQ_RPLY_PYLD_REG_ADDR_5 (.CK(addr_in_iso_buf[2]), .D(data_in_iso_buf[13]), .RN(RESETn), .Q(IRQ_RPLY_PYLD_REG_ADDR[5]));
    DFFSX1HVT IRQ_RPLY_PYLD_REG_ADDR_4 (.CK(addr_in_iso_buf[2]), .D(data_in_iso_buf[12]), .SN(RESETn), .Q(IRQ_RPLY_PYLD_REG_ADDR[4]));
    DFFRX1HVT IRQ_RPLY_PYLD_REG_ADDR_3 (.CK(addr_in_iso_buf[2]), .D(data_in_iso_buf[11]), .RN(RESETn), .Q(IRQ_RPLY_PYLD_REG_ADDR[3]));
    DFFRX1HVT IRQ_RPLY_PYLD_REG_ADDR_2 (.CK(addr_in_iso_buf[2]), .D(data_in_iso_buf[10]), .RN(RESETn), .Q(IRQ_RPLY_PYLD_REG_ADDR[2]));
    DFFRX1HVT IRQ_RPLY_PYLD_REG_ADDR_1 (.CK(addr_in_iso_buf[2]), .D(data_in_iso_buf[9]), .RN(RESETn), .Q(IRQ_RPLY_PYLD_REG_ADDR[1]));
    DFFSX1HVT IRQ_RPLY_PYLD_REG_ADDR_0 (.CK(addr_in_iso_buf[2]), .D(data_in_iso_buf[8]), .SN(RESETn), .Q(IRQ_RPLY_PYLD_REG_ADDR[0]));
    //IRQ_RPLY_PYLD_LENGTH_1 (8'h00)
    DFFRX1HVT IRQ_RPLY_PYLD_LENGTH_1_7 (.CK(addr_in_iso_buf[2]), .D(data_in_iso_buf[7]), .RN(RESETn), .Q(IRQ_RPLY_PYLD_LENGTH_1[7]));
    DFFRX1HVT IRQ_RPLY_PYLD_LENGTH_1_6 (.CK(addr_in_iso_buf[2]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(IRQ_RPLY_PYLD_LENGTH_1[6]));
    DFFRX1HVT IRQ_RPLY_PYLD_LENGTH_1_5 (.CK(addr_in_iso_buf[2]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(IRQ_RPLY_PYLD_LENGTH_1[5]));
    DFFRX1HVT IRQ_RPLY_PYLD_LENGTH_1_4 (.CK(addr_in_iso_buf[2]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(IRQ_RPLY_PYLD_LENGTH_1[4]));
    DFFRX1HVT IRQ_RPLY_PYLD_LENGTH_1_3 (.CK(addr_in_iso_buf[2]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(IRQ_RPLY_PYLD_LENGTH_1[3]));
    DFFRX1HVT IRQ_RPLY_PYLD_LENGTH_1_2 (.CK(addr_in_iso_buf[2]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(IRQ_RPLY_PYLD_LENGTH_1[2]));
    DFFRX1HVT IRQ_RPLY_PYLD_LENGTH_1_1 (.CK(addr_in_iso_buf[2]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(IRQ_RPLY_PYLD_LENGTH_1[1]));
    DFFRX1HVT IRQ_RPLY_PYLD_LENGTH_1_0 (.CK(addr_in_iso_buf[2]), .D(data_in_iso_buf[0]), .RN(RESETn), .Q(IRQ_RPLY_PYLD_LENGTH_1[0]));

   //****************************************************
   // REGISTER 0x03 (  3) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x04 (  4) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x05 (  5) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x06 (  6) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x07 (  7) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x08 (  8) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x09 (  9) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x0A ( 10) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x0B ( 11) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x0C ( 12) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x0D ( 13) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x0E ( 14) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x0F ( 15) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x10 ( 16)
   //****************************************************
    //RDC_SIGNATURE (24'h022003)
    DFFRX1HVT RDC_SIGNATURE_23 (.CK(addr_in_iso_buf[16]), .D(data_in_iso_buf[23]), .RN(RESETn), .Q(RDC_SIGNATURE[23]));
    DFFRX1HVT RDC_SIGNATURE_22 (.CK(addr_in_iso_buf[16]), .D(data_in_iso_buf[22]), .RN(RESETn), .Q(RDC_SIGNATURE[22]));
    DFFRX1HVT RDC_SIGNATURE_21 (.CK(addr_in_iso_buf[16]), .D(data_in_iso_buf[21]), .RN(RESETn), .Q(RDC_SIGNATURE[21]));
    DFFRX1HVT RDC_SIGNATURE_20 (.CK(addr_in_iso_buf[16]), .D(data_in_iso_buf[20]), .RN(RESETn), .Q(RDC_SIGNATURE[20]));
    DFFRX1HVT RDC_SIGNATURE_19 (.CK(addr_in_iso_buf[16]), .D(data_in_iso_buf[19]), .RN(RESETn), .Q(RDC_SIGNATURE[19]));
    DFFRX1HVT RDC_SIGNATURE_18 (.CK(addr_in_iso_buf[16]), .D(data_in_iso_buf[18]), .RN(RESETn), .Q(RDC_SIGNATURE[18]));
    DFFSX1HVT RDC_SIGNATURE_17 (.CK(addr_in_iso_buf[16]), .D(data_in_iso_buf[17]), .SN(RESETn), .Q(RDC_SIGNATURE[17]));
    DFFRX1HVT RDC_SIGNATURE_16 (.CK(addr_in_iso_buf[16]), .D(data_in_iso_buf[16]), .RN(RESETn), .Q(RDC_SIGNATURE[16]));
    DFFRX1HVT RDC_SIGNATURE_15 (.CK(addr_in_iso_buf[16]), .D(data_in_iso_buf[15]), .RN(RESETn), .Q(RDC_SIGNATURE[15]));
    DFFRX1HVT RDC_SIGNATURE_14 (.CK(addr_in_iso_buf[16]), .D(data_in_iso_buf[14]), .RN(RESETn), .Q(RDC_SIGNATURE[14]));
    DFFSX1HVT RDC_SIGNATURE_13 (.CK(addr_in_iso_buf[16]), .D(data_in_iso_buf[13]), .SN(RESETn), .Q(RDC_SIGNATURE[13]));
    DFFRX1HVT RDC_SIGNATURE_12 (.CK(addr_in_iso_buf[16]), .D(data_in_iso_buf[12]), .RN(RESETn), .Q(RDC_SIGNATURE[12]));
    DFFRX1HVT RDC_SIGNATURE_11 (.CK(addr_in_iso_buf[16]), .D(data_in_iso_buf[11]), .RN(RESETn), .Q(RDC_SIGNATURE[11]));
    DFFRX1HVT RDC_SIGNATURE_10 (.CK(addr_in_iso_buf[16]), .D(data_in_iso_buf[10]), .RN(RESETn), .Q(RDC_SIGNATURE[10]));
    DFFRX1HVT RDC_SIGNATURE_9 (.CK(addr_in_iso_buf[16]), .D(data_in_iso_buf[9]), .RN(RESETn), .Q(RDC_SIGNATURE[9]));
    DFFRX1HVT RDC_SIGNATURE_8 (.CK(addr_in_iso_buf[16]), .D(data_in_iso_buf[8]), .RN(RESETn), .Q(RDC_SIGNATURE[8]));
    DFFRX1HVT RDC_SIGNATURE_7 (.CK(addr_in_iso_buf[16]), .D(data_in_iso_buf[7]), .RN(RESETn), .Q(RDC_SIGNATURE[7]));
    DFFRX1HVT RDC_SIGNATURE_6 (.CK(addr_in_iso_buf[16]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(RDC_SIGNATURE[6]));
    DFFRX1HVT RDC_SIGNATURE_5 (.CK(addr_in_iso_buf[16]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(RDC_SIGNATURE[5]));
    DFFRX1HVT RDC_SIGNATURE_4 (.CK(addr_in_iso_buf[16]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(RDC_SIGNATURE[4]));
    DFFRX1HVT RDC_SIGNATURE_3 (.CK(addr_in_iso_buf[16]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(RDC_SIGNATURE[3]));
    DFFRX1HVT RDC_SIGNATURE_2 (.CK(addr_in_iso_buf[16]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(RDC_SIGNATURE[2]));
    DFFSX1HVT RDC_SIGNATURE_1 (.CK(addr_in_iso_buf[16]), .D(data_in_iso_buf[1]), .SN(RESETn), .Q(RDC_SIGNATURE[1]));
    DFFSX1HVT RDC_SIGNATURE_0 (.CK(addr_in_iso_buf[16]), .D(data_in_iso_buf[0]), .SN(RESETn), .Q(RDC_SIGNATURE[0]));

   //****************************************************
   // REGISTER 0x11 ( 17)
   //****************************************************
    //RDC_DOUT_OS (17'h00000)
    //DFFRX1HVT RDC_DOUT_OS_16 (.CK(addr_in_iso_buf[17]), .D(data_in_iso_buf[16]), .RN(RESETn), .Q(RDC_DOUT_OS[16]));
    //DFFRX1HVT RDC_DOUT_OS_15 (.CK(addr_in_iso_buf[17]), .D(data_in_iso_buf[15]), .RN(RESETn), .Q(RDC_DOUT_OS[15]));
    //DFFRX1HVT RDC_DOUT_OS_14 (.CK(addr_in_iso_buf[17]), .D(data_in_iso_buf[14]), .RN(RESETn), .Q(RDC_DOUT_OS[14]));
    //DFFRX1HVT RDC_DOUT_OS_13 (.CK(addr_in_iso_buf[17]), .D(data_in_iso_buf[13]), .RN(RESETn), .Q(RDC_DOUT_OS[13]));
    //DFFRX1HVT RDC_DOUT_OS_12 (.CK(addr_in_iso_buf[17]), .D(data_in_iso_buf[12]), .RN(RESETn), .Q(RDC_DOUT_OS[12]));
    //DFFRX1HVT RDC_DOUT_OS_11 (.CK(addr_in_iso_buf[17]), .D(data_in_iso_buf[11]), .RN(RESETn), .Q(RDC_DOUT_OS[11]));
    //DFFRX1HVT RDC_DOUT_OS_10 (.CK(addr_in_iso_buf[17]), .D(data_in_iso_buf[10]), .RN(RESETn), .Q(RDC_DOUT_OS[10]));
    //DFFRX1HVT RDC_DOUT_OS_9 (.CK(addr_in_iso_buf[17]), .D(data_in_iso_buf[9]), .RN(RESETn), .Q(RDC_DOUT_OS[9]));
    //DFFRX1HVT RDC_DOUT_OS_8 (.CK(addr_in_iso_buf[17]), .D(data_in_iso_buf[8]), .RN(RESETn), .Q(RDC_DOUT_OS[8]));
    //DFFRX1HVT RDC_DOUT_OS_7 (.CK(addr_in_iso_buf[17]), .D(data_in_iso_buf[7]), .RN(RESETn), .Q(RDC_DOUT_OS[7]));
    //DFFRX1HVT RDC_DOUT_OS_6 (.CK(addr_in_iso_buf[17]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(RDC_DOUT_OS[6]));
    //DFFRX1HVT RDC_DOUT_OS_5 (.CK(addr_in_iso_buf[17]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(RDC_DOUT_OS[5]));
    //DFFRX1HVT RDC_DOUT_OS_4 (.CK(addr_in_iso_buf[17]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(RDC_DOUT_OS[4]));
    //DFFRX1HVT RDC_DOUT_OS_3 (.CK(addr_in_iso_buf[17]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(RDC_DOUT_OS[3]));
    //DFFRX1HVT RDC_DOUT_OS_2 (.CK(addr_in_iso_buf[17]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(RDC_DOUT_OS[2]));
    //DFFRX1HVT RDC_DOUT_OS_1 (.CK(addr_in_iso_buf[17]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(RDC_DOUT_OS[1]));
    //DFFRX1HVT RDC_DOUT_OS_0 (.CK(addr_in_iso_buf[17]), .D(data_in_iso_buf[0]), .RN(RESETn), .Q(RDC_DOUT_OS[0]));

   //****************************************************
   // REGISTER 0x12 ( 18) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x13 ( 19) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x14 ( 20) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x15 ( 21) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x16 ( 22) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x17 ( 23) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x18 ( 24) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x19 ( 25) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x1A ( 26) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x1B ( 27) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x1C ( 28) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x1D ( 29) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x1E ( 30) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x1F ( 31) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x20 ( 32)
   //****************************************************
    //RDC_ISOLATE (1'h1)
    DFFSX1HVT RDC_ISOLATE_0 (.CK(addr_in_iso_buf[32]), .D(data_in_iso_buf[17]), .SN(RESETn), .Q(RDC_ISOLATE));
    //RDC_RESETn_FSM (1'h0)
    DFFRX1HVT RDC_RESETn_FSM_0 (.CK(addr_in_iso_buf[32]), .D(data_in_iso_buf[15]), .RN(RESETn), .Q(RDC_RESETn_FSM));
    //RDC_CNT_INIT (9'h050)
    DFFRX1HVT RDC_CNT_INIT_8 (.CK(addr_in_iso_buf[32]), .D(data_in_iso_buf[14]), .RN(RESETn), .Q(RDC_CNT_INIT[8]));
    DFFRX1HVT RDC_CNT_INIT_7 (.CK(addr_in_iso_buf[32]), .D(data_in_iso_buf[13]), .RN(RESETn), .Q(RDC_CNT_INIT[7]));
    DFFSX1HVT RDC_CNT_INIT_6 (.CK(addr_in_iso_buf[32]), .D(data_in_iso_buf[12]), .SN(RESETn), .Q(RDC_CNT_INIT[6]));
    DFFRX1HVT RDC_CNT_INIT_5 (.CK(addr_in_iso_buf[32]), .D(data_in_iso_buf[11]), .RN(RESETn), .Q(RDC_CNT_INIT[5]));
    DFFSX1HVT RDC_CNT_INIT_4 (.CK(addr_in_iso_buf[32]), .D(data_in_iso_buf[10]), .SN(RESETn), .Q(RDC_CNT_INIT[4]));
    DFFRX1HVT RDC_CNT_INIT_3 (.CK(addr_in_iso_buf[32]), .D(data_in_iso_buf[9]), .RN(RESETn), .Q(RDC_CNT_INIT[3]));
    DFFRX1HVT RDC_CNT_INIT_2 (.CK(addr_in_iso_buf[32]), .D(data_in_iso_buf[8]), .RN(RESETn), .Q(RDC_CNT_INIT[2]));
    DFFRX1HVT RDC_CNT_INIT_1 (.CK(addr_in_iso_buf[32]), .D(data_in_iso_buf[7]), .RN(RESETn), .Q(RDC_CNT_INIT[1]));
    DFFRX1HVT RDC_CNT_INIT_0 (.CK(addr_in_iso_buf[32]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(RDC_CNT_INIT[0]));
    //RDC_CNT_AMP1 (5'h0C)
    DFFRX1HVT RDC_CNT_AMP1_4 (.CK(addr_in_iso_buf[32]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(RDC_CNT_AMP1[4]));
    DFFSX1HVT RDC_CNT_AMP1_3 (.CK(addr_in_iso_buf[32]), .D(data_in_iso_buf[4]), .SN(RESETn), .Q(RDC_CNT_AMP1[3]));
    DFFSX1HVT RDC_CNT_AMP1_2 (.CK(addr_in_iso_buf[32]), .D(data_in_iso_buf[3]), .SN(RESETn), .Q(RDC_CNT_AMP1[2]));
    DFFRX1HVT RDC_CNT_AMP1_1 (.CK(addr_in_iso_buf[32]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(RDC_CNT_AMP1[1]));
    DFFRX1HVT RDC_CNT_AMP1_0 (.CK(addr_in_iso_buf[32]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(RDC_CNT_AMP1[0]));
    //RDC_EN_AZ (1'h1)
    DFFSX1HVT RDC_EN_AZ_0 (.CK(addr_in_iso_buf[32]), .D(data_in_iso_buf[0]), .SN(RESETn), .Q(RDC_EN_AZ));

    // Inverted Signals
    INVX4HVT RDC_ISOLATE_B_0 (.A(RDC_ISOLATE), .Y(RDC_ISOLATE_B));

   //****************************************************
   // REGISTER 0x21 ( 33)
   //****************************************************
    //RDC_CNT_AZ_RESETB (4'h2)
    DFFRX1HVT RDC_CNT_AZ_RESETB_3 (.CK(addr_in_iso_buf[33]), .D(data_in_iso_buf[18]), .RN(RESETn), .Q(RDC_CNT_AZ_RESETB[3]));
    DFFRX1HVT RDC_CNT_AZ_RESETB_2 (.CK(addr_in_iso_buf[33]), .D(data_in_iso_buf[17]), .RN(RESETn), .Q(RDC_CNT_AZ_RESETB[2]));
    DFFSX1HVT RDC_CNT_AZ_RESETB_1 (.CK(addr_in_iso_buf[33]), .D(data_in_iso_buf[16]), .SN(RESETn), .Q(RDC_CNT_AZ_RESETB[1]));
    DFFRX1HVT RDC_CNT_AZ_RESETB_0 (.CK(addr_in_iso_buf[33]), .D(data_in_iso_buf[15]), .RN(RESETn), .Q(RDC_CNT_AZ_RESETB[0]));
    //RDC_CNT_STORE (5'h04)
    DFFRX1HVT RDC_CNT_STORE_4 (.CK(addr_in_iso_buf[33]), .D(data_in_iso_buf[14]), .RN(RESETn), .Q(RDC_CNT_STORE[4]));
    DFFRX1HVT RDC_CNT_STORE_3 (.CK(addr_in_iso_buf[33]), .D(data_in_iso_buf[13]), .RN(RESETn), .Q(RDC_CNT_STORE[3]));
    DFFSX1HVT RDC_CNT_STORE_2 (.CK(addr_in_iso_buf[33]), .D(data_in_iso_buf[12]), .SN(RESETn), .Q(RDC_CNT_STORE[2]));
    DFFRX1HVT RDC_CNT_STORE_1 (.CK(addr_in_iso_buf[33]), .D(data_in_iso_buf[11]), .RN(RESETn), .Q(RDC_CNT_STORE[1]));
    DFFRX1HVT RDC_CNT_STORE_0 (.CK(addr_in_iso_buf[33]), .D(data_in_iso_buf[10]), .RN(RESETn), .Q(RDC_CNT_STORE[0]));
    //RDC_CNT_REDIS (5'h08)
    DFFRX1HVT RDC_CNT_REDIS_4 (.CK(addr_in_iso_buf[33]), .D(data_in_iso_buf[9]), .RN(RESETn), .Q(RDC_CNT_REDIS[4]));
    DFFSX1HVT RDC_CNT_REDIS_3 (.CK(addr_in_iso_buf[33]), .D(data_in_iso_buf[8]), .SN(RESETn), .Q(RDC_CNT_REDIS[3]));
    DFFRX1HVT RDC_CNT_REDIS_2 (.CK(addr_in_iso_buf[33]), .D(data_in_iso_buf[7]), .RN(RESETn), .Q(RDC_CNT_REDIS[2]));
    DFFRX1HVT RDC_CNT_REDIS_1 (.CK(addr_in_iso_buf[33]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(RDC_CNT_REDIS[1]));
    DFFRX1HVT RDC_CNT_REDIS_0 (.CK(addr_in_iso_buf[33]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(RDC_CNT_REDIS[0]));
    //RDC_CNT_AMP2 (5'h06)
    DFFRX1HVT RDC_CNT_AMP2_4 (.CK(addr_in_iso_buf[33]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(RDC_CNT_AMP2[4]));
    DFFRX1HVT RDC_CNT_AMP2_3 (.CK(addr_in_iso_buf[33]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(RDC_CNT_AMP2[3]));
    DFFSX1HVT RDC_CNT_AMP2_2 (.CK(addr_in_iso_buf[33]), .D(data_in_iso_buf[2]), .SN(RESETn), .Q(RDC_CNT_AMP2[2]));
    DFFSX1HVT RDC_CNT_AMP2_1 (.CK(addr_in_iso_buf[33]), .D(data_in_iso_buf[1]), .SN(RESETn), .Q(RDC_CNT_AMP2[1]));
    DFFRX1HVT RDC_CNT_AMP2_0 (.CK(addr_in_iso_buf[33]), .D(data_in_iso_buf[0]), .RN(RESETn), .Q(RDC_CNT_AMP2[0]));

   //****************************************************
   // REGISTER 0x22 ( 34)
   //****************************************************
    //RDC_CNT_IDLE (4'h2)
    DFFRX1HVT RDC_CNT_IDLE_3 (.CK(addr_in_iso_buf[34]), .D(data_in_iso_buf[12]), .RN(RESETn), .Q(RDC_CNT_IDLE[3]));
    DFFRX1HVT RDC_CNT_IDLE_2 (.CK(addr_in_iso_buf[34]), .D(data_in_iso_buf[11]), .RN(RESETn), .Q(RDC_CNT_IDLE[2]));
    DFFSX1HVT RDC_CNT_IDLE_1 (.CK(addr_in_iso_buf[34]), .D(data_in_iso_buf[10]), .SN(RESETn), .Q(RDC_CNT_IDLE[1]));
    DFFRX1HVT RDC_CNT_IDLE_0 (.CK(addr_in_iso_buf[34]), .D(data_in_iso_buf[9]), .RN(RESETn), .Q(RDC_CNT_IDLE[0]));
    //RDC_CNT_SKIP (2'h1)
    DFFRX1HVT RDC_CNT_SKIP_1 (.CK(addr_in_iso_buf[34]), .D(data_in_iso_buf[8]), .RN(RESETn), .Q(RDC_CNT_SKIP[1]));
    DFFSX1HVT RDC_CNT_SKIP_0 (.CK(addr_in_iso_buf[34]), .D(data_in_iso_buf[7]), .SN(RESETn), .Q(RDC_CNT_SKIP[0]));
    //RDC_OSR (7'h08)
    DFFRX1HVT RDC_OSR_6 (.CK(addr_in_iso_buf[34]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(RDC_OSR[6]));
    DFFRX1HVT RDC_OSR_5 (.CK(addr_in_iso_buf[34]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(RDC_OSR[5]));
    DFFRX1HVT RDC_OSR_4 (.CK(addr_in_iso_buf[34]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(RDC_OSR[4]));
    DFFSX1HVT RDC_OSR_3 (.CK(addr_in_iso_buf[34]), .D(data_in_iso_buf[3]), .SN(RESETn), .Q(RDC_OSR[3]));
    DFFRX1HVT RDC_OSR_2 (.CK(addr_in_iso_buf[34]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(RDC_OSR[2]));
    DFFRX1HVT RDC_OSR_1 (.CK(addr_in_iso_buf[34]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(RDC_OSR[1]));
    DFFRX1HVT RDC_OSR_0 (.CK(addr_in_iso_buf[34]), .D(data_in_iso_buf[0]), .RN(RESETn), .Q(RDC_OSR[0]));

   //****************************************************
   // REGISTER 0x23 ( 35)
   //****************************************************
    //RDC_VREF_I_AMP_LC (5'h00)
    DFFRX1HVT RDC_VREF_I_AMP_LC_4 (.CK(addr_in_iso_buf[35]), .D(data_in_iso_buf[12]), .RN(RESETn), .Q(RDC_VREF_I_AMP_LC[4]));
    DFFRX1HVT RDC_VREF_I_AMP_LC_3 (.CK(addr_in_iso_buf[35]), .D(data_in_iso_buf[11]), .RN(RESETn), .Q(RDC_VREF_I_AMP_LC[3]));
    DFFRX1HVT RDC_VREF_I_AMP_LC_2 (.CK(addr_in_iso_buf[35]), .D(data_in_iso_buf[10]), .RN(RESETn), .Q(RDC_VREF_I_AMP_LC[2]));
    DFFRX1HVT RDC_VREF_I_AMP_LC_1 (.CK(addr_in_iso_buf[35]), .D(data_in_iso_buf[9]), .RN(RESETn), .Q(RDC_VREF_I_AMP_LC[1]));
    DFFRX1HVT RDC_VREF_I_AMP_LC_0 (.CK(addr_in_iso_buf[35]), .D(data_in_iso_buf[8]), .RN(RESETn), .Q(RDC_VREF_I_AMP_LC[0]));
    //RDC_VCM_R_SEL_LC (6'h2D)
    DFFSX1HVT RDC_VCM_R_SEL_LC_5 (.CK(addr_in_iso_buf[35]), .D(data_in_iso_buf[7]), .SN(RESETn), .Q(RDC_VCM_R_SEL_LC[5]));
    DFFRX1HVT RDC_VCM_R_SEL_LC_4 (.CK(addr_in_iso_buf[35]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(RDC_VCM_R_SEL_LC[4]));
    DFFSX1HVT RDC_VCM_R_SEL_LC_3 (.CK(addr_in_iso_buf[35]), .D(data_in_iso_buf[5]), .SN(RESETn), .Q(RDC_VCM_R_SEL_LC[3]));
    DFFSX1HVT RDC_VCM_R_SEL_LC_2 (.CK(addr_in_iso_buf[35]), .D(data_in_iso_buf[4]), .SN(RESETn), .Q(RDC_VCM_R_SEL_LC[2]));
    DFFRX1HVT RDC_VCM_R_SEL_LC_1 (.CK(addr_in_iso_buf[35]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(RDC_VCM_R_SEL_LC[1]));
    DFFSX1HVT RDC_VCM_R_SEL_LC_0 (.CK(addr_in_iso_buf[35]), .D(data_in_iso_buf[2]), .SN(RESETn), .Q(RDC_VCM_R_SEL_LC[0]));
    //RDC_I_VCM_GEN_n_LC (2'h2)
    DFFSX1HVT RDC_I_VCM_GEN_n_LC_1 (.CK(addr_in_iso_buf[35]), .D(data_in_iso_buf[1]), .SN(RESETn), .Q(RDC_I_VCM_GEN_n_LC[1]));
    DFFRX1HVT RDC_I_VCM_GEN_n_LC_0 (.CK(addr_in_iso_buf[35]), .D(data_in_iso_buf[0]), .RN(RESETn), .Q(RDC_I_VCM_GEN_n_LC[0]));

    // Inverted Signals
    INVX4HVT RDC_VREF_I_AMP_LC_B_4 (.A(RDC_VREF_I_AMP_LC[4]), .Y(RDC_VREF_I_AMP_LC_B[4]));
    INVX4HVT RDC_VREF_I_AMP_LC_B_3 (.A(RDC_VREF_I_AMP_LC[3]), .Y(RDC_VREF_I_AMP_LC_B[3]));
    INVX4HVT RDC_VREF_I_AMP_LC_B_2 (.A(RDC_VREF_I_AMP_LC[2]), .Y(RDC_VREF_I_AMP_LC_B[2]));
    INVX4HVT RDC_VREF_I_AMP_LC_B_1 (.A(RDC_VREF_I_AMP_LC[1]), .Y(RDC_VREF_I_AMP_LC_B[1]));
    INVX4HVT RDC_VREF_I_AMP_LC_B_0 (.A(RDC_VREF_I_AMP_LC[0]), .Y(RDC_VREF_I_AMP_LC_B[0]));
    INVX4HVT RDC_VCM_R_SEL_LC_B_5 (.A(RDC_VCM_R_SEL_LC[5]), .Y(RDC_VCM_R_SEL_LC_B[5]));
    INVX4HVT RDC_VCM_R_SEL_LC_B_4 (.A(RDC_VCM_R_SEL_LC[4]), .Y(RDC_VCM_R_SEL_LC_B[4]));
    INVX4HVT RDC_VCM_R_SEL_LC_B_3 (.A(RDC_VCM_R_SEL_LC[3]), .Y(RDC_VCM_R_SEL_LC_B[3]));
    INVX4HVT RDC_VCM_R_SEL_LC_B_2 (.A(RDC_VCM_R_SEL_LC[2]), .Y(RDC_VCM_R_SEL_LC_B[2]));
    INVX4HVT RDC_VCM_R_SEL_LC_B_1 (.A(RDC_VCM_R_SEL_LC[1]), .Y(RDC_VCM_R_SEL_LC_B[1]));
    INVX4HVT RDC_VCM_R_SEL_LC_B_0 (.A(RDC_VCM_R_SEL_LC[0]), .Y(RDC_VCM_R_SEL_LC_B[0]));
    INVX4HVT RDC_I_VCM_GEN_n_LC_B_1 (.A(RDC_I_VCM_GEN_n_LC[1]), .Y(RDC_I_VCM_GEN_n_LC_B[1]));
    INVX4HVT RDC_I_VCM_GEN_n_LC_B_0 (.A(RDC_I_VCM_GEN_n_LC[0]), .Y(RDC_I_VCM_GEN_n_LC_B[0]));

   //****************************************************
   // REGISTER 0x24 ( 36)
   //****************************************************
    //RDC_SEL_DLY (4'h5)
    DFFRX1HVT RDC_SEL_DLY_3 (.CK(addr_in_iso_buf[36]), .D(data_in_iso_buf[17]), .RN(RESETn), .Q(RDC_SEL_DLY[3]));
    DFFSX1HVT RDC_SEL_DLY_2 (.CK(addr_in_iso_buf[36]), .D(data_in_iso_buf[16]), .SN(RESETn), .Q(RDC_SEL_DLY[2]));
    DFFRX1HVT RDC_SEL_DLY_1 (.CK(addr_in_iso_buf[36]), .D(data_in_iso_buf[15]), .RN(RESETn), .Q(RDC_SEL_DLY[1]));
    DFFSX1HVT RDC_SEL_DLY_0 (.CK(addr_in_iso_buf[36]), .D(data_in_iso_buf[14]), .SN(RESETn), .Q(RDC_SEL_DLY[0]));
    //RDC_SEL_STORE (1'h1)
    DFFSX1HVT RDC_SEL_STORE_0 (.CK(addr_in_iso_buf[36]), .D(data_in_iso_buf[13]), .SN(RESETn), .Q(RDC_SEL_STORE));
    //RDC_SEL_VB2_LC (5'h04)
    DFFRX1HVT RDC_SEL_VB2_LC_4 (.CK(addr_in_iso_buf[36]), .D(data_in_iso_buf[12]), .RN(RESETn), .Q(RDC_SEL_VB2_LC[4]));
    DFFRX1HVT RDC_SEL_VB2_LC_3 (.CK(addr_in_iso_buf[36]), .D(data_in_iso_buf[11]), .RN(RESETn), .Q(RDC_SEL_VB2_LC[3]));
    DFFSX1HVT RDC_SEL_VB2_LC_2 (.CK(addr_in_iso_buf[36]), .D(data_in_iso_buf[10]), .SN(RESETn), .Q(RDC_SEL_VB2_LC[2]));
    DFFRX1HVT RDC_SEL_VB2_LC_1 (.CK(addr_in_iso_buf[36]), .D(data_in_iso_buf[9]), .RN(RESETn), .Q(RDC_SEL_VB2_LC[1]));
    DFFRX1HVT RDC_SEL_VB2_LC_0 (.CK(addr_in_iso_buf[36]), .D(data_in_iso_buf[8]), .RN(RESETn), .Q(RDC_SEL_VB2_LC[0]));
    //RDC_SEL_VB3b_LC (3'h3)
    DFFRX1HVT RDC_SEL_VB3b_LC_2 (.CK(addr_in_iso_buf[36]), .D(data_in_iso_buf[7]), .RN(RESETn), .Q(RDC_SEL_VB3b_LC[2]));
    DFFSX1HVT RDC_SEL_VB3b_LC_1 (.CK(addr_in_iso_buf[36]), .D(data_in_iso_buf[6]), .SN(RESETn), .Q(RDC_SEL_VB3b_LC[1]));
    DFFSX1HVT RDC_SEL_VB3b_LC_0 (.CK(addr_in_iso_buf[36]), .D(data_in_iso_buf[5]), .SN(RESETn), .Q(RDC_SEL_VB3b_LC[0]));
    //RDC_SEL_GAIN_LC (5'h16)
    DFFSX1HVT RDC_SEL_GAIN_LC_4 (.CK(addr_in_iso_buf[36]), .D(data_in_iso_buf[4]), .SN(RESETn), .Q(RDC_SEL_GAIN_LC[4]));
    DFFRX1HVT RDC_SEL_GAIN_LC_3 (.CK(addr_in_iso_buf[36]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(RDC_SEL_GAIN_LC[3]));
    DFFSX1HVT RDC_SEL_GAIN_LC_2 (.CK(addr_in_iso_buf[36]), .D(data_in_iso_buf[2]), .SN(RESETn), .Q(RDC_SEL_GAIN_LC[2]));
    DFFSX1HVT RDC_SEL_GAIN_LC_1 (.CK(addr_in_iso_buf[36]), .D(data_in_iso_buf[1]), .SN(RESETn), .Q(RDC_SEL_GAIN_LC[1]));
    DFFRX1HVT RDC_SEL_GAIN_LC_0 (.CK(addr_in_iso_buf[36]), .D(data_in_iso_buf[0]), .RN(RESETn), .Q(RDC_SEL_GAIN_LC[0]));

    // Inverted Signals
    INVX4HVT RDC_SEL_VB2_LC_B_4 (.A(RDC_SEL_VB2_LC[4]), .Y(RDC_SEL_VB2_LC_B[4]));
    INVX4HVT RDC_SEL_VB2_LC_B_3 (.A(RDC_SEL_VB2_LC[3]), .Y(RDC_SEL_VB2_LC_B[3]));
    INVX4HVT RDC_SEL_VB2_LC_B_2 (.A(RDC_SEL_VB2_LC[2]), .Y(RDC_SEL_VB2_LC_B[2]));
    INVX4HVT RDC_SEL_VB2_LC_B_1 (.A(RDC_SEL_VB2_LC[1]), .Y(RDC_SEL_VB2_LC_B[1]));
    INVX4HVT RDC_SEL_VB2_LC_B_0 (.A(RDC_SEL_VB2_LC[0]), .Y(RDC_SEL_VB2_LC_B[0]));
    INVX4HVT RDC_SEL_VB3b_LC_B_2 (.A(RDC_SEL_VB3b_LC[2]), .Y(RDC_SEL_VB3b_LC_B[2]));
    INVX4HVT RDC_SEL_VB3b_LC_B_1 (.A(RDC_SEL_VB3b_LC[1]), .Y(RDC_SEL_VB3b_LC_B[1]));
    INVX4HVT RDC_SEL_VB3b_LC_B_0 (.A(RDC_SEL_VB3b_LC[0]), .Y(RDC_SEL_VB3b_LC_B[0]));
    INVX4HVT RDC_SEL_GAIN_LC_B_4 (.A(RDC_SEL_GAIN_LC[4]), .Y(RDC_SEL_GAIN_LC_B[4]));
    INVX4HVT RDC_SEL_GAIN_LC_B_3 (.A(RDC_SEL_GAIN_LC[3]), .Y(RDC_SEL_GAIN_LC_B[3]));
    INVX4HVT RDC_SEL_GAIN_LC_B_2 (.A(RDC_SEL_GAIN_LC[2]), .Y(RDC_SEL_GAIN_LC_B[2]));
    INVX4HVT RDC_SEL_GAIN_LC_B_1 (.A(RDC_SEL_GAIN_LC[1]), .Y(RDC_SEL_GAIN_LC_B[1]));
    INVX4HVT RDC_SEL_GAIN_LC_B_0 (.A(RDC_SEL_GAIN_LC[0]), .Y(RDC_SEL_GAIN_LC_B[0]));

   //****************************************************
   // REGISTER 0x25 ( 37)
   //****************************************************
    //RDC_OFFSET_P_LC (5'h16)
    DFFSX1HVT RDC_OFFSET_P_LC_4 (.CK(addr_in_iso_buf[37]), .D(data_in_iso_buf[12]), .SN(RESETn), .Q(RDC_OFFSET_P_LC[4]));
    DFFRX1HVT RDC_OFFSET_P_LC_3 (.CK(addr_in_iso_buf[37]), .D(data_in_iso_buf[11]), .RN(RESETn), .Q(RDC_OFFSET_P_LC[3]));
    DFFSX1HVT RDC_OFFSET_P_LC_2 (.CK(addr_in_iso_buf[37]), .D(data_in_iso_buf[10]), .SN(RESETn), .Q(RDC_OFFSET_P_LC[2]));
    DFFSX1HVT RDC_OFFSET_P_LC_1 (.CK(addr_in_iso_buf[37]), .D(data_in_iso_buf[9]), .SN(RESETn), .Q(RDC_OFFSET_P_LC[1]));
    DFFRX1HVT RDC_OFFSET_P_LC_0 (.CK(addr_in_iso_buf[37]), .D(data_in_iso_buf[8]), .RN(RESETn), .Q(RDC_OFFSET_P_LC[0]));
    //RDC_OFFSET_PB_LC (5'h09)
    DFFRX1HVT RDC_OFFSET_PB_LC_4 (.CK(addr_in_iso_buf[37]), .D(data_in_iso_buf[7]), .RN(RESETn), .Q(RDC_OFFSET_PB_LC[4]));
    DFFSX1HVT RDC_OFFSET_PB_LC_3 (.CK(addr_in_iso_buf[37]), .D(data_in_iso_buf[6]), .SN(RESETn), .Q(RDC_OFFSET_PB_LC[3]));
    DFFRX1HVT RDC_OFFSET_PB_LC_2 (.CK(addr_in_iso_buf[37]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(RDC_OFFSET_PB_LC[2]));
    DFFRX1HVT RDC_OFFSET_PB_LC_1 (.CK(addr_in_iso_buf[37]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(RDC_OFFSET_PB_LC[1]));
    DFFSX1HVT RDC_OFFSET_PB_LC_0 (.CK(addr_in_iso_buf[37]), .D(data_in_iso_buf[3]), .SN(RESETn), .Q(RDC_OFFSET_PB_LC[0]));
    //RDC_I_AMP_BIASGEN (3'h3)
    DFFRX1HVT RDC_I_AMP_BIASGEN_2 (.CK(addr_in_iso_buf[37]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(RDC_I_AMP_BIASGEN[2]));
    DFFSX1HVT RDC_I_AMP_BIASGEN_1 (.CK(addr_in_iso_buf[37]), .D(data_in_iso_buf[1]), .SN(RESETn), .Q(RDC_I_AMP_BIASGEN[1]));
    DFFSX1HVT RDC_I_AMP_BIASGEN_0 (.CK(addr_in_iso_buf[37]), .D(data_in_iso_buf[0]), .SN(RESETn), .Q(RDC_I_AMP_BIASGEN[0]));

    // Inverted Signals
    INVX4HVT RDC_OFFSET_P_LC_B_4 (.A(RDC_OFFSET_P_LC[4]), .Y(RDC_OFFSET_P_LC_B[4]));
    INVX4HVT RDC_OFFSET_P_LC_B_3 (.A(RDC_OFFSET_P_LC[3]), .Y(RDC_OFFSET_P_LC_B[3]));
    INVX4HVT RDC_OFFSET_P_LC_B_2 (.A(RDC_OFFSET_P_LC[2]), .Y(RDC_OFFSET_P_LC_B[2]));
    INVX4HVT RDC_OFFSET_P_LC_B_1 (.A(RDC_OFFSET_P_LC[1]), .Y(RDC_OFFSET_P_LC_B[1]));
    INVX4HVT RDC_OFFSET_P_LC_B_0 (.A(RDC_OFFSET_P_LC[0]), .Y(RDC_OFFSET_P_LC_B[0]));
    INVX4HVT RDC_OFFSET_PB_LC_B_4 (.A(RDC_OFFSET_PB_LC[4]), .Y(RDC_OFFSET_PB_LC_B[4]));
    INVX4HVT RDC_OFFSET_PB_LC_B_3 (.A(RDC_OFFSET_PB_LC[3]), .Y(RDC_OFFSET_PB_LC_B[3]));
    INVX4HVT RDC_OFFSET_PB_LC_B_2 (.A(RDC_OFFSET_PB_LC[2]), .Y(RDC_OFFSET_PB_LC_B[2]));
    INVX4HVT RDC_OFFSET_PB_LC_B_1 (.A(RDC_OFFSET_PB_LC[1]), .Y(RDC_OFFSET_PB_LC_B[1]));
    INVX4HVT RDC_OFFSET_PB_LC_B_0 (.A(RDC_OFFSET_PB_LC[0]), .Y(RDC_OFFSET_PB_LC_B[0]));

   //****************************************************
   // REGISTER 0x26 ( 38)
   //****************************************************
    //RDC_OFFSET_SELN_B_LC (3'h7)
    DFFSX1HVT RDC_OFFSET_SELN_B_LC_2 (.CK(addr_in_iso_buf[38]), .D(data_in_iso_buf[7]), .SN(RESETn), .Q(RDC_OFFSET_SELN_B_LC[2]));
    DFFSX1HVT RDC_OFFSET_SELN_B_LC_1 (.CK(addr_in_iso_buf[38]), .D(data_in_iso_buf[6]), .SN(RESETn), .Q(RDC_OFFSET_SELN_B_LC[1]));
    DFFSX1HVT RDC_OFFSET_SELN_B_LC_0 (.CK(addr_in_iso_buf[38]), .D(data_in_iso_buf[5]), .SN(RESETn), .Q(RDC_OFFSET_SELN_B_LC[0]));
    //RDC_OFFSET_SELP_B_LC (3'h7)
    DFFSX1HVT RDC_OFFSET_SELP_B_LC_2 (.CK(addr_in_iso_buf[38]), .D(data_in_iso_buf[4]), .SN(RESETn), .Q(RDC_OFFSET_SELP_B_LC[2]));
    DFFSX1HVT RDC_OFFSET_SELP_B_LC_1 (.CK(addr_in_iso_buf[38]), .D(data_in_iso_buf[3]), .SN(RESETn), .Q(RDC_OFFSET_SELP_B_LC[1]));
    DFFSX1HVT RDC_OFFSET_SELP_B_LC_0 (.CK(addr_in_iso_buf[38]), .D(data_in_iso_buf[2]), .SN(RESETn), .Q(RDC_OFFSET_SELP_B_LC[0]));
    //RDC_SEL_ADC_MODE (1'h0)
    DFFRX1HVT RDC_SEL_ADC_MODE_0 (.CK(addr_in_iso_buf[38]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(RDC_SEL_ADC_MODE));
    //RDC_ENb_DWA (1'h0)
    DFFRX1HVT RDC_ENb_DWA_0 (.CK(addr_in_iso_buf[38]), .D(data_in_iso_buf[0]), .RN(RESETn), .Q(RDC_ENb_DWA));

    // Inverted Signals
    INVX4HVT RDC_OFFSET_SELN_B_LC_B_2 (.A(RDC_OFFSET_SELN_B_LC[2]), .Y(RDC_OFFSET_SELN_B_LC_B[2]));
    INVX4HVT RDC_OFFSET_SELN_B_LC_B_1 (.A(RDC_OFFSET_SELN_B_LC[1]), .Y(RDC_OFFSET_SELN_B_LC_B[1]));
    INVX4HVT RDC_OFFSET_SELN_B_LC_B_0 (.A(RDC_OFFSET_SELN_B_LC[0]), .Y(RDC_OFFSET_SELN_B_LC_B[0]));
    INVX4HVT RDC_OFFSET_SELP_B_LC_B_2 (.A(RDC_OFFSET_SELP_B_LC[2]), .Y(RDC_OFFSET_SELP_B_LC_B[2]));
    INVX4HVT RDC_OFFSET_SELP_B_LC_B_1 (.A(RDC_OFFSET_SELP_B_LC[1]), .Y(RDC_OFFSET_SELP_B_LC_B[1]));
    INVX4HVT RDC_OFFSET_SELP_B_LC_B_0 (.A(RDC_OFFSET_SELP_B_LC[0]), .Y(RDC_OFFSET_SELP_B_LC_B[0]));

   //****************************************************
   // REGISTER 0x27 ( 39)
   //****************************************************
    //RDC_I_BUF_VH_n_LC (3'h5)
    DFFSX1HVT RDC_I_BUF_VH_n_LC_2 (.CK(addr_in_iso_buf[39]), .D(data_in_iso_buf[2]), .SN(RESETn), .Q(RDC_I_BUF_VH_n_LC[2]));
    DFFRX1HVT RDC_I_BUF_VH_n_LC_1 (.CK(addr_in_iso_buf[39]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(RDC_I_BUF_VH_n_LC[1]));
    DFFSX1HVT RDC_I_BUF_VH_n_LC_0 (.CK(addr_in_iso_buf[39]), .D(data_in_iso_buf[0]), .SN(RESETn), .Q(RDC_I_BUF_VH_n_LC[0]));

    // Inverted Signals
    INVX4HVT RDC_I_BUF_VH_n_LC_B_2 (.A(RDC_I_BUF_VH_n_LC[2]), .Y(RDC_I_BUF_VH_n_LC_B[2]));
    INVX4HVT RDC_I_BUF_VH_n_LC_B_1 (.A(RDC_I_BUF_VH_n_LC[1]), .Y(RDC_I_BUF_VH_n_LC_B[1]));
    INVX4HVT RDC_I_BUF_VH_n_LC_B_0 (.A(RDC_I_BUF_VH_n_LC[0]), .Y(RDC_I_BUF_VH_n_LC_B[0]));

   //****************************************************
   // REGISTER 0x28 ( 40)
   //****************************************************
    //RDC_RESET_RC_OSC (1'h1)
    DFFSX1HVT RDC_RESET_RC_OSC_0 (.CK(addr_in_iso_buf[40]), .D(data_in_iso_buf[18]), .SN(RESETn), .Q(RDC_RESET_RC_OSC));
    //RDC_R_REF (4'h8)
    DFFSX1HVT RDC_R_REF_3 (.CK(addr_in_iso_buf[40]), .D(data_in_iso_buf[17]), .SN(RESETn), .Q(RDC_R_REF[3]));
    DFFRX1HVT RDC_R_REF_2 (.CK(addr_in_iso_buf[40]), .D(data_in_iso_buf[16]), .RN(RESETn), .Q(RDC_R_REF[2]));
    DFFRX1HVT RDC_R_REF_1 (.CK(addr_in_iso_buf[40]), .D(data_in_iso_buf[15]), .RN(RESETn), .Q(RDC_R_REF[1]));
    DFFRX1HVT RDC_R_REF_0 (.CK(addr_in_iso_buf[40]), .D(data_in_iso_buf[14]), .RN(RESETn), .Q(RDC_R_REF[0]));
    //RDC_I_BUF (4'h0)
    DFFRX1HVT RDC_I_BUF_3 (.CK(addr_in_iso_buf[40]), .D(data_in_iso_buf[13]), .RN(RESETn), .Q(RDC_I_BUF[3]));
    DFFRX1HVT RDC_I_BUF_2 (.CK(addr_in_iso_buf[40]), .D(data_in_iso_buf[12]), .RN(RESETn), .Q(RDC_I_BUF[2]));
    DFFRX1HVT RDC_I_BUF_1 (.CK(addr_in_iso_buf[40]), .D(data_in_iso_buf[11]), .RN(RESETn), .Q(RDC_I_BUF[1]));
    DFFRX1HVT RDC_I_BUF_0 (.CK(addr_in_iso_buf[40]), .D(data_in_iso_buf[10]), .RN(RESETn), .Q(RDC_I_BUF[0]));
    //RDC_I_BUF2 (4'h0)
    DFFRX1HVT RDC_I_BUF2_3 (.CK(addr_in_iso_buf[40]), .D(data_in_iso_buf[9]), .RN(RESETn), .Q(RDC_I_BUF2[3]));
    DFFRX1HVT RDC_I_BUF2_2 (.CK(addr_in_iso_buf[40]), .D(data_in_iso_buf[8]), .RN(RESETn), .Q(RDC_I_BUF2[2]));
    DFFRX1HVT RDC_I_BUF2_1 (.CK(addr_in_iso_buf[40]), .D(data_in_iso_buf[7]), .RN(RESETn), .Q(RDC_I_BUF2[1]));
    DFFRX1HVT RDC_I_BUF2_0 (.CK(addr_in_iso_buf[40]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(RDC_I_BUF2[0]));
    //RDC_I_CMP (4'h1)
    DFFRX1HVT RDC_I_CMP_3 (.CK(addr_in_iso_buf[40]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(RDC_I_CMP[3]));
    DFFRX1HVT RDC_I_CMP_2 (.CK(addr_in_iso_buf[40]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(RDC_I_CMP[2]));
    DFFRX1HVT RDC_I_CMP_1 (.CK(addr_in_iso_buf[40]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(RDC_I_CMP[1]));
    DFFSX1HVT RDC_I_CMP_0 (.CK(addr_in_iso_buf[40]), .D(data_in_iso_buf[2]), .SN(RESETn), .Q(RDC_I_CMP[0]));
    //RDC_I_MIRROR (2'h1)
    DFFRX1HVT RDC_I_MIRROR_1 (.CK(addr_in_iso_buf[40]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(RDC_I_MIRROR[1]));
    DFFSX1HVT RDC_I_MIRROR_0 (.CK(addr_in_iso_buf[40]), .D(data_in_iso_buf[0]), .SN(RESETn), .Q(RDC_I_MIRROR[0]));

   //****************************************************
   // REGISTER 0x29 ( 41)
   //****************************************************
    //RDC_PDIFF (15'h0200)
    DFFRX1HVT RDC_PDIFF_14 (.CK(addr_in_iso_buf[41]), .D(data_in_iso_buf[14]), .RN(RESETn), .Q(RDC_PDIFF[14]));
    DFFRX1HVT RDC_PDIFF_13 (.CK(addr_in_iso_buf[41]), .D(data_in_iso_buf[13]), .RN(RESETn), .Q(RDC_PDIFF[13]));
    DFFRX1HVT RDC_PDIFF_12 (.CK(addr_in_iso_buf[41]), .D(data_in_iso_buf[12]), .RN(RESETn), .Q(RDC_PDIFF[12]));
    DFFRX1HVT RDC_PDIFF_11 (.CK(addr_in_iso_buf[41]), .D(data_in_iso_buf[11]), .RN(RESETn), .Q(RDC_PDIFF[11]));
    DFFRX1HVT RDC_PDIFF_10 (.CK(addr_in_iso_buf[41]), .D(data_in_iso_buf[10]), .RN(RESETn), .Q(RDC_PDIFF[10]));
    DFFSX1HVT RDC_PDIFF_9 (.CK(addr_in_iso_buf[41]), .D(data_in_iso_buf[9]), .SN(RESETn), .Q(RDC_PDIFF[9]));
    DFFRX1HVT RDC_PDIFF_8 (.CK(addr_in_iso_buf[41]), .D(data_in_iso_buf[8]), .RN(RESETn), .Q(RDC_PDIFF[8]));
    DFFRX1HVT RDC_PDIFF_7 (.CK(addr_in_iso_buf[41]), .D(data_in_iso_buf[7]), .RN(RESETn), .Q(RDC_PDIFF[7]));
    DFFRX1HVT RDC_PDIFF_6 (.CK(addr_in_iso_buf[41]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(RDC_PDIFF[6]));
    DFFRX1HVT RDC_PDIFF_5 (.CK(addr_in_iso_buf[41]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(RDC_PDIFF[5]));
    DFFRX1HVT RDC_PDIFF_4 (.CK(addr_in_iso_buf[41]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(RDC_PDIFF[4]));
    DFFRX1HVT RDC_PDIFF_3 (.CK(addr_in_iso_buf[41]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(RDC_PDIFF[3]));
    DFFRX1HVT RDC_PDIFF_2 (.CK(addr_in_iso_buf[41]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(RDC_PDIFF[2]));
    DFFRX1HVT RDC_PDIFF_1 (.CK(addr_in_iso_buf[41]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(RDC_PDIFF[1]));
    DFFRX1HVT RDC_PDIFF_0 (.CK(addr_in_iso_buf[41]), .D(data_in_iso_buf[0]), .RN(RESETn), .Q(RDC_PDIFF[0]));

   //****************************************************
   // REGISTER 0x2A ( 42)
   //****************************************************
    //RDC_POLY (24'h004000)
    DFFRX1HVT RDC_POLY_23 (.CK(addr_in_iso_buf[42]), .D(data_in_iso_buf[23]), .RN(RESETn), .Q(RDC_POLY[23]));
    DFFRX1HVT RDC_POLY_22 (.CK(addr_in_iso_buf[42]), .D(data_in_iso_buf[22]), .RN(RESETn), .Q(RDC_POLY[22]));
    DFFRX1HVT RDC_POLY_21 (.CK(addr_in_iso_buf[42]), .D(data_in_iso_buf[21]), .RN(RESETn), .Q(RDC_POLY[21]));
    DFFRX1HVT RDC_POLY_20 (.CK(addr_in_iso_buf[42]), .D(data_in_iso_buf[20]), .RN(RESETn), .Q(RDC_POLY[20]));
    DFFRX1HVT RDC_POLY_19 (.CK(addr_in_iso_buf[42]), .D(data_in_iso_buf[19]), .RN(RESETn), .Q(RDC_POLY[19]));
    DFFRX1HVT RDC_POLY_18 (.CK(addr_in_iso_buf[42]), .D(data_in_iso_buf[18]), .RN(RESETn), .Q(RDC_POLY[18]));
    DFFRX1HVT RDC_POLY_17 (.CK(addr_in_iso_buf[42]), .D(data_in_iso_buf[17]), .RN(RESETn), .Q(RDC_POLY[17]));
    DFFRX1HVT RDC_POLY_16 (.CK(addr_in_iso_buf[42]), .D(data_in_iso_buf[16]), .RN(RESETn), .Q(RDC_POLY[16]));
    DFFRX1HVT RDC_POLY_15 (.CK(addr_in_iso_buf[42]), .D(data_in_iso_buf[15]), .RN(RESETn), .Q(RDC_POLY[15]));
    DFFSX1HVT RDC_POLY_14 (.CK(addr_in_iso_buf[42]), .D(data_in_iso_buf[14]), .SN(RESETn), .Q(RDC_POLY[14]));
    DFFRX1HVT RDC_POLY_13 (.CK(addr_in_iso_buf[42]), .D(data_in_iso_buf[13]), .RN(RESETn), .Q(RDC_POLY[13]));
    DFFRX1HVT RDC_POLY_12 (.CK(addr_in_iso_buf[42]), .D(data_in_iso_buf[12]), .RN(RESETn), .Q(RDC_POLY[12]));
    DFFRX1HVT RDC_POLY_11 (.CK(addr_in_iso_buf[42]), .D(data_in_iso_buf[11]), .RN(RESETn), .Q(RDC_POLY[11]));
    DFFRX1HVT RDC_POLY_10 (.CK(addr_in_iso_buf[42]), .D(data_in_iso_buf[10]), .RN(RESETn), .Q(RDC_POLY[10]));
    DFFRX1HVT RDC_POLY_9 (.CK(addr_in_iso_buf[42]), .D(data_in_iso_buf[9]), .RN(RESETn), .Q(RDC_POLY[9]));
    DFFRX1HVT RDC_POLY_8 (.CK(addr_in_iso_buf[42]), .D(data_in_iso_buf[8]), .RN(RESETn), .Q(RDC_POLY[8]));
    DFFRX1HVT RDC_POLY_7 (.CK(addr_in_iso_buf[42]), .D(data_in_iso_buf[7]), .RN(RESETn), .Q(RDC_POLY[7]));
    DFFRX1HVT RDC_POLY_6 (.CK(addr_in_iso_buf[42]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(RDC_POLY[6]));
    DFFRX1HVT RDC_POLY_5 (.CK(addr_in_iso_buf[42]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(RDC_POLY[5]));
    DFFRX1HVT RDC_POLY_4 (.CK(addr_in_iso_buf[42]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(RDC_POLY[4]));
    DFFRX1HVT RDC_POLY_3 (.CK(addr_in_iso_buf[42]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(RDC_POLY[3]));
    DFFRX1HVT RDC_POLY_2 (.CK(addr_in_iso_buf[42]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(RDC_POLY[2]));
    DFFRX1HVT RDC_POLY_1 (.CK(addr_in_iso_buf[42]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(RDC_POLY[1]));
    DFFRX1HVT RDC_POLY_0 (.CK(addr_in_iso_buf[42]), .D(data_in_iso_buf[0]), .RN(RESETn), .Q(RDC_POLY[0]));

   //****************************************************
   // REGISTER 0x2B ( 43)
   //****************************************************
    //RDC_MIM (3'h4)
    DFFSX1HVT RDC_MIM_2 (.CK(addr_in_iso_buf[43]), .D(data_in_iso_buf[6]), .SN(RESETn), .Q(RDC_MIM[2]));
    DFFRX1HVT RDC_MIM_1 (.CK(addr_in_iso_buf[43]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(RDC_MIM[1]));
    DFFRX1HVT RDC_MIM_0 (.CK(addr_in_iso_buf[43]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(RDC_MIM[0]));
    //RDC_MOM (3'h4)
    DFFSX1HVT RDC_MOM_2 (.CK(addr_in_iso_buf[43]), .D(data_in_iso_buf[3]), .SN(RESETn), .Q(RDC_MOM[2]));
    DFFRX1HVT RDC_MOM_1 (.CK(addr_in_iso_buf[43]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(RDC_MOM[1]));
    DFFRX1HVT RDC_MOM_0 (.CK(addr_in_iso_buf[43]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(RDC_MOM[0]));
    //RDC_CLK_ISOLATE (1'h1)
    DFFSX1HVT RDC_CLK_ISOLATE_0 (.CK(addr_in_iso_buf[43]), .D(data_in_iso_buf[0]), .SN(RESETn), .Q(RDC_CLK_ISOLATE));

   //****************************************************
   // REGISTER 0x2C ( 44)
   //****************************************************
    //RDC_EN_PG_FSM (1'h1)
    DFFSX1HVT RDC_EN_PG_FSM_0 (.CK(addr_in_iso_buf[44]), .D(data_in_iso_buf[10]), .SN(RESETn), .Q(RDC_EN_PG_FSM));
    //RDC_EN_PG_AMP_V1P2 (1'h1)
    DFFSX1HVT RDC_EN_PG_AMP_V1P2_0 (.CK(addr_in_iso_buf[44]), .D(data_in_iso_buf[9]), .SN(RESETn), .Q(RDC_EN_PG_AMP_V1P2));
    //RDC_EN_PG_ADC_V1P2 (1'h1)
    DFFSX1HVT RDC_EN_PG_ADC_V1P2_0 (.CK(addr_in_iso_buf[44]), .D(data_in_iso_buf[8]), .SN(RESETn), .Q(RDC_EN_PG_ADC_V1P2));
    //RDC_EN_PG_BUF_VH_V1P2 (1'h1)
    DFFSX1HVT RDC_EN_PG_BUF_VH_V1P2_0 (.CK(addr_in_iso_buf[44]), .D(data_in_iso_buf[7]), .SN(RESETn), .Q(RDC_EN_PG_BUF_VH_V1P2));
    //RDC_EN_PG_RC_OSC (1'h1)
    DFFSX1HVT RDC_EN_PG_RC_OSC_0 (.CK(addr_in_iso_buf[44]), .D(data_in_iso_buf[6]), .SN(RESETn), .Q(RDC_EN_PG_RC_OSC));
    //RDC_ENb_PG_VREF (1'h0)
    DFFRX1HVT RDC_ENb_PG_VREF_0 (.CK(addr_in_iso_buf[44]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(RDC_ENb_PG_VREF));
    //RDC_ENb_PG_AMP_VBAT (1'h0)
    DFFRX1HVT RDC_ENb_PG_AMP_VBAT_0 (.CK(addr_in_iso_buf[44]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(RDC_ENb_PG_AMP_VBAT));
    //RDC_ENb_PG_ADC_VBAT (1'h0)
    DFFRX1HVT RDC_ENb_PG_ADC_VBAT_0 (.CK(addr_in_iso_buf[44]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(RDC_ENb_PG_ADC_VBAT));
    //RDC_ENb_MIRROR_LDO (1'h1)
    DFFSX1HVT RDC_ENb_MIRROR_LDO_0 (.CK(addr_in_iso_buf[44]), .D(data_in_iso_buf[2]), .SN(RESETn), .Q(RDC_ENb_MIRROR_LDO));
    //RDC_ENb_PG_BUF_VCM (1'h0)
    DFFRX1HVT RDC_ENb_PG_BUF_VCM_0 (.CK(addr_in_iso_buf[44]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(RDC_ENb_PG_BUF_VCM));
    //RDC_ENb_PG_BUF_VH_VBAT (1'h0)
    DFFRX1HVT RDC_ENb_PG_BUF_VH_VBAT_0 (.CK(addr_in_iso_buf[44]), .D(data_in_iso_buf[0]), .RN(RESETn), .Q(RDC_ENb_PG_BUF_VH_VBAT));

endmodule // rdcv3_rf
